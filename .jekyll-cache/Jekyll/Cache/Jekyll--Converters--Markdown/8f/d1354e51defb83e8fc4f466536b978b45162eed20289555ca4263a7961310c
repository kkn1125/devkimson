I"x<h1 id="소수-찾기-문제">소수 찾기 문제</h1>

<p>요즘 프로그래머스의 문제를 단계별로 하나씩 풀어나가고 있는데요. 소수에 대한 이해도가 부족해서 딜레이 되었던지라 정리하기 위해 기록합니다.</p>

<h2 id="소수란">소수란</h2>

<p>소수는 1보다 큰 자연수 중 1과 자기 자신만을 약수로 가지는 수를 말합니다.</p>

<p>즉, 여기서 이미 1은 제외된다는 이야기입니다. 2,3,5,7 까지는 10이내의 소수이고, 그 외 2,3,5,7의 배수가 제외됩니다. 그렇게 반복적으로 다음 소수의 배수인 것도 제외가 되는 셈이지요.</p>

<p>제가 잘못 알았던 부분이 이것입니다. 단지 2,3,5,7로 나누어 떨어지지 않는 것만을 소수라 생각하고 문제를 풀었습니다.</p>

<p>결론은 당연히 정답이 안나옵니다.</p>

<h2 id="자바스크립트에서-소수-판별">자바스크립트에서 소수 판별</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nx">isPrimeNumber</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span>
	<span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">%</span><span class="nx">i</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>굉장히 간단합니다. 1인 것은 바로 <code class="language-plaintext highlighter-rouge">false</code>를 주고, 2는 소수이기에 <code class="language-plaintext highlighter-rouge">for</code>문의 범위를 2부터 시작하여 <code class="language-plaintext highlighter-rouge">true</code>를 반환 시켜버립니다.</p>

<p>3도 소수이고 3이 들어가게되면 3보다 작을 때까지 돌기 때문에 <code class="language-plaintext highlighter-rouge">true</code>를 반환합니다.</p>

<p>4는 2의 배수이기 때문에 <code class="language-plaintext highlighter-rouge">false</code>, 5, 7도 2, 3과 마찬가지로 그 전의 수에 끝나기에 <code class="language-plaintext highlighter-rouge">true</code>를 반환합니다.</p>

<p>이제 10부터는 대부분 배수에 걸리기 때문에 나누어지는 수는 <code class="language-plaintext highlighter-rouge">false</code>, 소수는 <code class="language-plaintext highlighter-rouge">true</code>로 판별하게 됩니다.</p>

<p>프로그래머스의 문제 풀이를 올리지는 못하니 소수를 판별하는 식을 기록하자면 위와 같습니다.</p>

<p>이것저것 대입하다보니 코드양이 많이 준 상태가 되어서 메모합니다!</p>

<h2 id="문제-팁">문제 팁</h2>

<p>문제 명칭도 언급하지는 않겠습니다. 해당 문제는 중복되지 않는 조합을 사용해야하는데요. 조합의 경우도 잊을까봐 기록합니다.</p>

<p>그룹 넘버(묶을 수)를 정하는 식을 만들고자 하면 함수를 조금 변경해서 쓰시면 될 겁니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="cm">/**
 * @param {array} nums ex) [ 1,2,3,4 ]
 * @returns {array} result ex) [ [ 1,2,3 ],[ 1,2,4 ],[ 1,3,4 ],[ 2,3,4 ] ]
 */</span>
<span class="kd">function</span> <span class="nx">combination</span><span class="p">(</span><span class="nx">nums</span><span class="p">){</span>
	<span class="c1">// ... 소수 판별식</span>
	<span class="kd">let</span> <span class="nx">mid</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="kd">let</span> <span class="nx">last</span> <span class="o">=</span> <span class="nx">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="k">while</span> <span class="p">(</span><span class="nx">nums</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">result</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">mid</span><span class="p">]</span> <span class="o">+</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">last</span><span class="p">]);</span>
        <span class="nx">last</span><span class="o">++</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">last</span> <span class="o">&gt;</span> <span class="nx">nums</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">mid</span><span class="o">++</span><span class="p">;</span>
            <span class="nx">last</span> <span class="o">=</span> <span class="nx">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">mid</span> <span class="o">&gt;</span> <span class="nx">nums</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">nums</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
            <span class="nx">mid</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="nx">last</span> <span class="o">=</span> <span class="nx">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>아래는 더 보면 좋은 내용입니다.</p>

<hr />

<p>📚 함께 보면 좋은 내용</p>

<p><a href="https://ko.wikipedia.org/wiki/%EC%86%8C%EC%88%98_(%EC%88%98%EB%A1%A0)" target="_blank">Wikipedia::소수 (수론)</a></p>

<p><a href="https://www.programiz.com/javascript/examples/prime-number" target="_blank">programiz::JavaScript Program to Check Prime Number</a></p>

<p><a href="https://mathbang.net/199" target="_blank">mathbang::소수와 합성수, 소수의 뜻, 합성수의 뜻</a></p>
:ET