I"tm<h1 id="마우스-이동-방향-감지">마우스 이동 방향 감지</h1>

<p>얼마 전 취업활동 중 모 회사의 포트폴리오 페이지에서 신기한 효과를 보고 따라해보려 합니다.</p>

<p>각 포트폴리오가 카드형식으로 표시되고 카드에 마우스를 올리면 마우스가 들어온 방향으로 반투명의 커버가 덮히게 됩니다. 그러고나서 배경 색이 이미지의 색상과 동일하게 변경됩니다.</p>

<p>그래서 구현 할 기능을 정리하면</p>

<ol>
  <li>마우스 방향 감지</li>
  <li>마우스가 들어온 방향에 따라 덮히는 커버</li>
  <li>이미지 색상 판별하여 배경 색 변경</li>
</ol>

<p>3가지 입니다.</p>

<h2 id="이동-방향을-감지해보자">이동 방향을 감지해보자</h2>

<p>예전에 스크롤로 위아래를 감지하는 방법을 포스팅 했었는데요. 그것과 같은 식으로 잡아내려합니다. 스크롤 방향이 궁금하시면 <a href="https://kkn1125.github.io/javascript-detecting-scroll-direction/" target="_blank">스크롤 방향 감지</a>를 참고하시기 바랍니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card mx-3"</span> <span class="na">style=</span><span class="s">"width: 15rem;"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;div&gt;</span>
		<span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"img-fluid"</span> <span class="na">src=</span><span class="s">"cover01.jpg"</span> <span class="na">alt=</span><span class="s">"test"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;/div&gt;</span>
	<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"d-flex justify-content-between card-title px-3 pt-3"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"h3"</span><span class="nt">&gt;</span>Title Of Card<span class="nt">&lt;/div&gt;</span>
		<span class="nt">&lt;span&gt;</span>🙋‍♂️<span class="nt">&lt;/span&gt;</span>
	<span class="nt">&lt;/div&gt;</span>
	<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-body"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"card-text"</span><span class="nt">&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Non veniam
			doloremque
			praesentium
			reprehenderit? Fugit quaerat nam error perferendis, ipsam sed.<span class="nt">&lt;/p&gt;</span>
	<span class="nt">&lt;/div&gt;</span>
	<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-footer"</span><span class="nt">&gt;</span>
		kimson
	<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>테스트용 카드입니다. bootstrap 5.0.2를 사용했습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">let</span> <span class="nx">over</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// 마우스가 들어왔는지 체크</span>
<span class="kd">let</span> <span class="nx">beforeX</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// 마우스가 이전에 있던 X좌표 위치</span>
<span class="kd">let</span> <span class="nx">beforeY</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// 마우스가 이전에 있던 Y좌표 위치</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>3가지 변수로 카드에 마우스가 들어왔는지, 어느 방향인지 컨트롤하겠습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="rouge-code"><pre><span class="kd">let</span> <span class="nx">movementHandler</span> <span class="o">=</span> <span class="p">(</span><span class="nx">ev</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span> <span class="c1">// 움직임 감지</span>
	<span class="kd">let</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="dl">"</span><span class="s2">card</span><span class="dl">"</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">over</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
        <span class="kd">let</span> <span class="nx">rgb</span><span class="p">;</span>
		<span class="kd">let</span> <span class="nx">curX</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">screenX</span><span class="p">;</span>
		<span class="kd">let</span> <span class="nx">curY</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">screenY</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">"</span><span class="s2">img</span><span class="dl">"</span><span class="p">)){</span>
            <span class="c1">// 타겟에 이미지태그가 있으면 배경색을 바꾸는 함수 실행</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">curX</span><span class="o">&gt;</span><span class="nx">beforeX</span> <span class="o">&amp;&amp;</span> <span class="nx">curY</span><span class="o">==</span><span class="nx">beforeY</span><span class="p">){</span>
            <span class="c1">// 좌에서 우로</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">curX</span><span class="o">==</span><span class="nx">beforeX</span> <span class="o">&amp;&amp;</span> <span class="nx">curY</span><span class="o">&gt;</span><span class="nx">beforeY</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 상에서 하로</span>
            
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">curX</span><span class="o">&lt;</span><span class="nx">beforeX</span> <span class="o">&amp;&amp;</span> <span class="nx">curY</span><span class="o">==</span><span class="nx">beforeY</span><span class="p">){</span>
            <span class="c1">// 우에서 좌로</span>
            
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">curX</span><span class="o">==</span><span class="nx">beforeX</span> <span class="o">&amp;&amp;</span> <span class="nx">curY</span><span class="o">&lt;</span><span class="nx">beforeY</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 하에서 상으로</span>
        <span class="p">}</span>
        <span class="nx">beforeX</span> <span class="o">=</span> <span class="nx">curX</span><span class="p">;</span>
        <span class="nx">beforeY</span> <span class="o">=</span> <span class="nx">curY</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">target</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="dl">"</span><span class="s2">card</span><span class="dl">"</span><span class="p">)){</span>
        <span class="nx">over</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">let</span> <span class="nx">fadeCover</span> <span class="o">=</span> <span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nx">direction</span><span class="p">,</span> <span class="nx">rgb</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
	<span class="kd">let</span> <span class="nx">origin</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">"</span><span class="s2">.cover</span><span class="dl">"</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">origin</span><span class="p">){</span> <span class="c1">// 커버 초기화</span>
        <span class="nx">origin</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="kd">let</span> <span class="nx">cover</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">div</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">cover</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">"</span><span class="s2">cover</span><span class="dl">"</span><span class="p">,</span> <span class="nx">direction</span><span class="p">);</span>
    <span class="nx">cover</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="s2">`rgb(</span><span class="p">${</span><span class="nx">rgb</span><span class="p">.</span><span class="nx">r</span><span class="p">}</span><span class="s2">, </span><span class="p">${</span><span class="nx">rgb</span><span class="p">.</span><span class="nx">g</span><span class="p">}</span><span class="s2">, </span><span class="p">${</span><span class="nx">rgb</span><span class="p">.</span><span class="nx">b</span><span class="p">}</span><span class="s2">, 0.5)`</span><span class="p">;</span>
    <span class="nx">target</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">cover</span><span class="p">);</span>
    <span class="nx">over</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>여기서 <code class="language-plaintext highlighter-rouge">cover</code>클래스와 <code class="language-plaintext highlighter-rouge">direction</code>인자를 받아 넣는데 <code class="language-plaintext highlighter-rouge">direction</code>은 미리 css에서 설정한 내용으로 방향에 따라 덮는 방향을 결정하려합니다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
</pre></td><td class="rouge-code"><pre><span class="nt">body</span><span class="p">{</span>
    <span class="nl">transition</span><span class="p">:</span> <span class="n">background-color</span> <span class="m">1s</span><span class="p">;</span>
    <span class="nl">-webkit-transition</span><span class="p">:</span> <span class="n">background-color</span> <span class="m">1s</span><span class="p">;</span>
    <span class="nl">-moz-transition</span><span class="p">:</span> <span class="n">background-color</span> <span class="m">1s</span><span class="p">;</span>
    <span class="nl">-ms-transition</span><span class="p">:</span> <span class="n">background-color</span> <span class="m">1s</span><span class="p">;</span>
    <span class="nl">-o-transition</span><span class="p">:</span> <span class="n">background-color</span> <span class="m">1s</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">h1</span><span class="o">,</span>
<span class="nt">h2</span><span class="o">,</span>
<span class="nt">h3</span><span class="o">,</span>
<span class="nt">h4</span><span class="o">,</span>
<span class="nt">h5</span><span class="o">,</span>
<span class="nt">h6</span> <span class="p">{</span>
    <span class="nl">text-transform</span><span class="p">:</span> <span class="nb">capitalize</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.card</span><span class="nd">::after</span><span class="p">{</span>
    <span class="nl">content</span><span class="p">:</span> <span class="s1">""</span><span class="p">;</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">left</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.cover</span><span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0.5</span><span class="p">);</span>
<span class="p">}</span>

<span class="nc">.cover.start</span><span class="o">,</span>
<span class="nc">.cover.end</span><span class="p">{</span>
    <span class="nl">animation</span><span class="p">:</span> <span class="n">startEnd</span> <span class="m">.5s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="nb">both</span><span class="p">;</span>
    <span class="nl">-webkit-animation</span><span class="p">:</span> <span class="n">startEnd</span> <span class="m">.5s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="nb">both</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.cover.end</span><span class="p">{</span>
    <span class="nl">right</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.cover.top</span><span class="o">,</span>
<span class="nc">.cover.bottom</span><span class="p">{</span>
    <span class="nl">animation</span><span class="p">:</span> <span class="n">topBottom</span> <span class="m">0.5s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="nb">both</span><span class="p">;</span>
    <span class="nl">-webkit-animation</span><span class="p">:</span> <span class="n">topBottom</span> <span class="m">0.5s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="nb">both</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.cover.bottom</span><span class="p">{</span>
    <span class="nl">bottom</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">@keyframes</span> <span class="n">startEnd</span><span class="p">{</span>
    <span class="err">0</span><span class="o">%</span><span class="p">{</span>
        <span class="nl">width</span><span class="p">:</span> <span class="m">0%</span><span class="p">;</span>
        <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="err">100</span><span class="o">%</span><span class="p">{</span>
        <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
        <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="k">@keyframes</span> <span class="n">topBottom</span><span class="p">{</span>
    <span class="err">0</span><span class="o">%</span><span class="p">{</span>
        <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
        <span class="nl">height</span><span class="p">:</span> <span class="m">0%</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="err">100</span><span class="o">%</span><span class="p">{</span>
        <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
        <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">keyframes</code>를 써서 상하, 좌우 두 묶음으로 한 이유는 서로 방향만 반대이기 때문에 두가지만 설정하였고, 우측에서와 아래측에서 커버가 늘어나는 방향을 주기위해 <code class="language-plaintext highlighter-rouge">end</code>, <code class="language-plaintext highlighter-rouge">bottom</code>은 <code class="language-plaintext highlighter-rouge">right</code>와 <code class="language-plaintext highlighter-rouge">bottom</code>값을 <code class="language-plaintext highlighter-rouge">0</code>으로 따로 주었습니다.</p>

<p>그리고 문제의 이미지 색상을 추출하는 함수는 <code class="language-plaintext highlighter-rouge">stackoverflow</code>의 힘을 빌려 아직 완전히 이해하지 못했지만 사용하였습니다.</p>

<p>글 아래에</p>

<blockquote>
  <p><a href="https://stackoverflow.com/questions/2541481/get-average-color-of-image-via-javascript" target="_blank">stackoverflow :: Get average color of image via Javascript</a></p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nx">getAverageRGB</span><span class="p">(</span><span class="nx">imgEl</span><span class="p">)</span> <span class="p">{</span>

    <span class="kd">var</span> <span class="nx">blockSize</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="c1">// only visit every 5 pixels</span>
        <span class="nx">defaultRGB</span> <span class="o">=</span> <span class="p">{</span><span class="na">r</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="na">g</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="na">b</span><span class="p">:</span><span class="mi">0</span><span class="p">},</span> <span class="c1">// for non-supporting envs</span>
        <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">canvas</span><span class="dl">'</span><span class="p">),</span>
        <span class="nx">context</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span> <span class="o">&amp;&amp;</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="dl">'</span><span class="s1">2d</span><span class="dl">'</span><span class="p">),</span>
        <span class="nx">data</span><span class="p">,</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">height</span><span class="p">,</span>
        <span class="nx">i</span> <span class="o">=</span> <span class="o">-</span><span class="mi">4</span><span class="p">,</span>
        <span class="nx">length</span><span class="p">,</span>
        <span class="nx">rgb</span> <span class="o">=</span> <span class="p">{</span><span class="na">r</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="na">g</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="na">b</span><span class="p">:</span><span class="mi">0</span><span class="p">},</span>
        <span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">defaultRGB</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="nx">height</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">=</span> <span class="nx">imgEl</span><span class="p">.</span><span class="nx">naturalHeight</span> <span class="o">||</span> <span class="nx">imgEl</span><span class="p">.</span><span class="nx">offsetHeight</span> <span class="o">||</span> <span class="nx">imgEl</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span>
    <span class="nx">width</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="nx">imgEl</span><span class="p">.</span><span class="nx">naturalWidth</span> <span class="o">||</span> <span class="nx">imgEl</span><span class="p">.</span><span class="nx">offsetWidth</span> <span class="o">||</span> <span class="nx">imgEl</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span>

    <span class="nx">context</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">imgEl</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

    <span class="k">try</span> <span class="p">{</span>
        <span class="nx">data</span> <span class="o">=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">getImageData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">height</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
        <span class="cm">/* security error, img on diff domain */</span>
        <span class="k">return</span> <span class="nx">defaultRGB</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="nx">length</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+=</span> <span class="nx">blockSize</span> <span class="o">*</span> <span class="mi">4</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nx">length</span> <span class="p">)</span> <span class="p">{</span>
        <span class="o">++</span><span class="nx">count</span><span class="p">;</span>
        <span class="nx">rgb</span><span class="p">.</span><span class="nx">r</span> <span class="o">+=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
        <span class="nx">rgb</span><span class="p">.</span><span class="nx">g</span> <span class="o">+=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
        <span class="nx">rgb</span><span class="p">.</span><span class="nx">b</span> <span class="o">+=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span>
    <span class="p">}</span>

    <span class="c1">// ~~ used to floor values</span>
    <span class="nx">rgb</span><span class="p">.</span><span class="nx">r</span> <span class="o">=</span> <span class="o">~~</span><span class="p">(</span><span class="nx">rgb</span><span class="p">.</span><span class="nx">r</span><span class="o">/</span><span class="nx">count</span><span class="p">);</span>
    <span class="nx">rgb</span><span class="p">.</span><span class="nx">g</span> <span class="o">=</span> <span class="o">~~</span><span class="p">(</span><span class="nx">rgb</span><span class="p">.</span><span class="nx">g</span><span class="o">/</span><span class="nx">count</span><span class="p">);</span>
    <span class="nx">rgb</span><span class="p">.</span><span class="nx">b</span> <span class="o">=</span> <span class="o">~~</span><span class="p">(</span><span class="nx">rgb</span><span class="p">.</span><span class="nx">b</span><span class="o">/</span><span class="nx">count</span><span class="p">);</span>

    <span class="k">return</span> <span class="nx">rgb</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET