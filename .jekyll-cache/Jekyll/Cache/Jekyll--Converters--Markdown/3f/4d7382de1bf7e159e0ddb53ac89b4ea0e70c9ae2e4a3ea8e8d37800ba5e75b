I"<h1 id="kakao-pc-ver">KAKAO PC ver</h1>

<p>kakao pc 버전은 설계 분야 업무를 하던 중에 알게 되어 정말 편리하고 자료 공유로 사용하기도 했는데요, 현재 프로그래밍을 공부하면서 구현해보고자 하는 마음에 열심히 독학 중인 spring으로 만들었습니다.</p>

<h2 id="skills">Skills</h2>
<ul>
  <li>spring framework</li>
  <li>websocket js</li>
  <li>mysql</li>
  <li>html, css, javascript</li>
</ul>

<h2 id="소요기간">소요기간</h2>
<blockquote>
  <p>2021.6.5 ~ 2021.6.10(중단)</p>
  <footer class="blockquote-footer">5일 소요</footer>
  <details><summary>중단사유</summary><p>websoket 지식이 많이 부족하여 현재 준비중인 구직에 지장을 주어 임시 중단</p></details>
</blockquote>

<h2 id="사이트-구성">사이트 구성</h2>

<ul>
  <li>로그인</li>
  <li>메인</li>
  <li>채팅목록</li>
  <li>채팅룸</li>
  <li>더보기</li>
</ul>

<h3 id="java-config-방식-사용">java config 방식 사용</h3>

<p>spring에서 web.xml 및 context-*.xml대신 webconfig.java를 만들어 configuration 방식을 사용하였습니다.
많은 레퍼런스가 있는 상황은 아니지만 검색을 통해 구현하는데 성공하였습니다.</p>

<p>당시 java config로 exception, security 처리가 미숙하여 url과 sessionId로 분기문처리하였습니다.</p>

<h3 id="로그인">로그인</h3>

<p><img src="/assets/images/post/kakao/kakao-6.png" alt="로그인" title="로그인" /></p>

<blockquote>
  <p>java config 방식을 사용하면서 불편했던 점이 security와 exception 처리였습니다.<br />
로그인페이지로 redirect하는 부분에서 번거롭지만 url을 받고, sessionId 여부를 통해 redirect하는 방식을 취했습니다.</p>
</blockquote>

<h3 id="메인">메인</h3>

<p><img src="/assets/images/post/kakao/kakao-5.png" alt="메인" title="메인 친구목록" /></p>

<blockquote>
  <p>친구목록은 db에 user테이블로 구성하였고, 친구카드 클릭 시 옵션 popup에 있는 버튼은 restful 방식으로 처리되도록 하였습니다.<br />
채팅하기를 누르면 본인이 마스터가되어 채팅룸이 열립니다. (자세한 내용은 <a href="#채팅룸">채팅룸</a> 단락 참조)</p>
</blockquote>

<h3 id="채팅목록">채팅목록</h3>

<p><img src="/assets/images/post/kakao/kakao-2.png" alt="채팅목록" title="채팅 목록" /></p>

<blockquote>
  <p>생성된 채팅룸은 ‘채팅하기’를 누른 사람에게 생성되며, 상대방 또한 ‘채팅하기’를 누르면 같은 UUID를 확인하고 동일한 채팅룸에 접속됩니다.</p>
</blockquote>

<h3 id="채팅룸">채팅룸</h3>

<p><img src="/assets/images/post/kakao/kakao-3.png" alt="채팅룸" title="채팅룸" /></p>

<blockquote>
  <p>채팅룸은 UUID를 룸의 ID로 사용하고 본인 입력 시 연속되면 노란 박스로, 상대 입력 시 회색 박스로 연속되게 됩니다.</p>
</blockquote>

<h3 id="더보기">더보기</h3>

<p><img src="/assets/images/post/kakao/kakao-1.png" alt="더보기" title="더보기" /></p>

<blockquote>
  <p>websoket 기능구현 이외 미구현되어 있습니다. 원래의 계획은 메일이 카카오메일로 넘어가도록 하고, 캘린더는 이후 따로 <a href="/javascript-calendar02/" title="캘린더">캘린더 api</a>를 만들어 적용할 계획이었습니다. 현재 블로그에 포스팅된</p>
</blockquote>

<p><a href="/javascript-calendar02/" title="캘린더">캘린더</a></p>

<p>가 추후 프로젝트 재개 시 사용될 것입니다.</p>

:ET