I"k`<h1 id="gantt-chart">Gantt Chart</h1>

<blockquote>
  <p>수정사항: 업데이트된 내용을 추가 하였습니다.</p>
</blockquote>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e2/GanttChartAnatomy.png/300px-GanttChartAnatomy.png" alt="위키 백과 - 플레잉카드" title="위키 백과 - 간트 차트" />
   <figcaption>[출처] 위키 백과 - 간트 차트</figcaption>
</span>
</figure>

<p>간트 차트는 프로젝트 일정관리를 위해서 사용이 되는데요. 처음 간트 차트를 접하게 된 때는 설계사무소를 다닐 때 였습니다.</p>

<p>물론 테이블을 다루는 라이브러리를 많이 있고, 아예 엑셀을 만들어 배포하는 것도 많이 봤습니다.</p>

<p>하지만 원리와 구성을 모른 채 라이브러리에 의존하다보니 문득 궁금해졌습니다. 무엇보다도 계기는 태그 하나씩 짜는게 마음대로 안되고 귀찮고, 노동이 필요하고, 필요로하는 사람이 있어 하드코딩이라도 괜찮으니 한 번 만들어 보기로 했습니다.</p>

<h2 id="의사-코드-작성">의사 코드 작성</h2>

<p>의사 코드라기보다 전체적으로 어떻게 구성해서 어떤 기능이 크게 있는지 먼저 정리해나갔습니다.</p>

<ol>
  <li>테이블은 초기에 헤드와 바디 영역으로 1개 씩 생성한다. (초기화)</li>
  <li>내보내기를 누르면 완성된 테이블을 <code class="language-plaintext highlighter-rouge">html</code> 코드로 복사해서 사용하고 싶은 곳에 붙여넣는다.</li>
</ol>

<p>크게보면 별로 할게 없어보입니다.</p>

<h3 id="세분화된-의사코드">세분화된 의사코드</h3>

<ul>
  <li>셀
    <ol>
      <li><code class="language-plaintext highlighter-rouge">case</code> 마우스를 클릭한다.
        <ol>
          <li><code class="language-plaintext highlighter-rouge">textarea</code>를 생성한다.</li>
          <li>셀의 내용을 <code class="language-plaintext highlighter-rouge">textarea</code>에 복사한다.</li>
          <li>생성된 <code class="language-plaintext highlighter-rouge">textarea</code>를 <code class="language-plaintext highlighter-rouge">select</code>함수로 선택한다.</li>
          <li><code class="language-plaintext highlighter-rouge">temp</code>에 처음 셀의 내용을 저장한다.</li>
          <li>내용을 수정한다.</li>
          <li><code class="language-plaintext highlighter-rouge">if</code> <code class="language-plaintext highlighter-rouge">Escape</code>키를 누르면
            <ol>
              <li><code class="language-plaintext highlighter-rouge">temp</code> 내용을 덮어씌운다.</li>
              <li><code class="language-plaintext highlighter-rouge">textarea</code>를 삭제한다.</li>
            </ol>
          </li>
          <li><code class="language-plaintext highlighter-rouge">elif</code> <code class="language-plaintext highlighter-rouge">ctrl</code> + <code class="language-plaintext highlighter-rouge">Enter</code>키를 누르면
            <ol>
              <li><code class="language-plaintext highlighter-rouge">textarea</code>내용을 덮어씌운다.</li>
              <li><code class="language-plaintext highlighter-rouge">textarea</code>를 삭제한다.</li>
            </ol>
          </li>
        </ol>
      </li>
      <li><code class="language-plaintext highlighter-rouge">case</code> 마우스를 호버한다.
        <ol>
          <li>셀 기준 우측과 하단에 <code class="language-plaintext highlighter-rouge">add</code>버튼을 띄운다.
            <ol>
              <li><code class="language-plaintext highlighter-rouge">if</code> 우측 버튼 클릭</li>
              <li>해당 셀이 속한 행 다음으로 열을 추가한다. (thead, tbody)</li>
              <li><code class="language-plaintext highlighter-rouge">if</code> 하단 버튼 클릭</li>
              <li>해당 셀이 속한 행 다음으로 행을 추가한다. (thead, tbody)</li>
            </ol>
          </li>
          <li>테이블 기준 좌측과 상단에 <code class="language-plaintext highlighter-rouge">delete</code>버튼을 띄운다.
            <ol>
              <li><code class="language-plaintext highlighter-rouge">if</code> 좌측 버튼 클릭</li>
              <li>해당 셀이 속한 행을 지운다. (thead, tbody)</li>
              <li><code class="language-plaintext highlighter-rouge">elif</code> 상단 버튼 클릭</li>
              <li>해당 셀이 속한 열을 지운다. (thead, tbody)</li>
            </ol>
          </li>
        </ol>
      </li>
      <li><code class="language-plaintext highlighter-rouge">case</code> 마우스 우클릭을 한다.
        <ol>
          <li>컨트롤 리스트를 띄운다.
            <ol>
              <li><code class="language-plaintext highlighter-rouge">case</code> 폰트 (size, style)</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 폰트 색상 (color, opacity)</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 배경 색상 (color, opacity)</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 테두리 (width, style, color)</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 이동 (left, top, bottom, right)</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 속성 복사 (paste, copy, clear)</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 내용 복사 (paste, copy, clear)</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 행 전체 적용</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 열 전체 적용</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 길이 조정</li>
              <li><code class="language-plaintext highlighter-rouge">case</code> 높이 조정</li>
            </ol>
          </li>
        </ol>
      </li>
    </ol>
  </li>
</ul>

<p>더 많은 기능들이 있지만 핵심이 되는 기능은 위가 전부 입니다. 대강 내용이 기능들이 정리되고 어떤 함수를 만들고 어떤 변수를 만들어 사용할지 가닥이 잡히면 코드를 작성합니다.</p>

<h2 id="많은-input-내용-자동으로-변경시키기">많은 input 내용 자동으로 변경시키기</h2>

<p><code class="language-plaintext highlighter-rouge">input</code>이 많아지면서 데이터를 넣는게 힘들어질텐데요. 여러 툴들을 떠올리면서 다양한 방법을 찾게 됩니다.</p>

<p>추천하는 방법은 전역적으로 <code class="language-plaintext highlighter-rouge">input</code> 이벤트를 사용해서 데이터를 적용시키는 것인데요.</p>

<p>힘든 예제는 아래와 같습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="kd">let</span> <span class="nx">fontSize</span><span class="p">,</span> <span class="nx">fontUnit</span><span class="p">,</span> <span class="nx">borderWidth</span><span class="p">,</span> <span class="nx">borderUnit</span><span class="p">,</span> <span class="nx">borderStyle</span><span class="p">,</span> <span class="nx">borderColor</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">gantt</span> <span class="o">=</span> <span class="p">{};</span>

<span class="kd">const</span> <span class="nx">inputFontSize</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#fontSize</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// ex) value = 12</span>

<span class="kd">const</span> <span class="nx">inputFontUnit</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#fontUnit</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">inputBorderWidth</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#borderWidth</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// ex) value = 1</span>

<span class="kd">const</span> <span class="nx">inputBorderUnit</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#borderUnit</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">borderStyle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#borderStyle</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">borderColor</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#borderColor</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">function</span> <span class="nx">unitDivide</span><span class="p">(</span><span class="nx">input</span><span class="p">){</span>
   <span class="k">return</span> <span class="nx">input</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="err">\</span><span class="o">/</span><span class="p">([</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="p">.]</span><span class="o">+</span><span class="p">)(</span><span class="err">\</span><span class="nx">w</span><span class="o">+</span><span class="p">)</span><span class="err">\</span><span class="o">/</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">unitConcat</span><span class="p">(</span><span class="nx">input</span><span class="p">,</span> <span class="nx">unit</span><span class="p">){</span>
   <span class="k">return</span> <span class="nx">input</span><span class="p">.</span><span class="nx">value</span> <span class="o">+</span> <span class="nx">unit</span><span class="p">;</span>
<span class="p">}</span>

<span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">change</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">ev</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
   <span class="nx">fontUnit</span> <span class="o">=</span> <span class="nx">inputFontUnit</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span> <span class="c1">// ex) "px"</span>
   <span class="nx">borderUnit</span> <span class="o">=</span> <span class="nx">inputBorderUnit</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span> <span class="c1">// ex) "px"</span>

   <span class="nx">fontSize</span> <span class="o">=</span> <span class="nx">unitConcat</span><span class="p">(</span><span class="nx">inputFontSize</span><span class="p">,</span> <span class="nx">fontUnit</span><span class="p">);</span>
   <span class="nx">borderWidth</span> <span class="o">=</span> <span class="nx">unitConcat</span><span class="p">(</span><span class="nx">inputBorderWidth</span><span class="p">,</span> <span class="nx">borderUnit</span><span class="p">);</span>

   <span class="k">switch</span><span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">id</span><span class="p">){</span>
      <span class="k">case</span> <span class="dl">'</span><span class="s1">fontSize</span><span class="dl">'</span><span class="p">:</span>
         <span class="nx">gantt</span><span class="p">.</span><span class="nx">attr</span><span class="p">[</span><span class="dl">'</span><span class="s1">fontSize</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">fontSize</span><span class="p">;</span> <span class="c1">// ex) "12px"</span>
         <span class="k">break</span><span class="p">;</span>
      <span class="k">case</span> <span class="dl">'</span><span class="s1">borderWidth</span><span class="dl">'</span><span class="p">:</span>
         <span class="nx">gantt</span><span class="p">.</span><span class="nx">attr</span><span class="p">[</span><span class="dl">'</span><span class="s1">borderWidth</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">borderWidth</span><span class="p">;</span> <span class="c1">// ex) "1px"</span>
         <span class="k">break</span><span class="p">;</span>
      <span class="c1">// ... 쭉쭉쭉</span>
   <span class="p">}</span>
<span class="p">})</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이렇게 작성하다보면 속성이 추가될 때마다 수정해줘야하고 많아져 관리가 힘듭니다.</p>

<p>특히 단위를 지정하는 속성이나 <code class="language-plaintext highlighter-rouge">radio</code> 등을 이용한 속성 선택이라면 더욱 힘듭니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="kd">const</span> <span class="nx">gantt</span> <span class="o">=</span> <span class="p">{};</span>

<span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">change</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">ev</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
   <span class="kd">const</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span>
   <span class="kd">let</span> <span class="nx">autoValue</span> <span class="o">=</span> <span class="p">[...</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">`#</span><span class="p">${</span><span class="nx">target</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">)].</span><span class="nx">reduce</span><span class="p">((</span><span class="nx">pre</span><span class="p">,</span> <span class="nx">cur</span><span class="p">)</span><span class="o">=&gt;</span><span class="nx">pre</span><span class="o">+=</span><span class="nx">cur</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span> <span class="dl">''</span><span class="p">);</span>

   <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">target</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="dl">'</span><span class="s1">attrs</span><span class="dl">'</span><span class="p">))</span> <span class="k">return</span><span class="p">;</span>
   <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">target</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="dl">'</span><span class="s1">td,th</span><span class="dl">'</span><span class="p">))</span> <span class="k">return</span><span class="p">;</span>

   <span class="k">switch</span><span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">id</span><span class="p">){</span>
      <span class="na">default</span> <span class="p">:</span>
         <span class="k">if</span><span class="p">(</span><span class="nx">closest</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#bRow</span><span class="dl">'</span><span class="p">).</span><span class="nx">checked</span><span class="p">){</span>
            <span class="nx">gantt</span><span class="p">[</span><span class="nx">ganttType</span><span class="p">][</span><span class="nx">rowid</span><span class="p">.</span><span class="nx">value</span><span class="p">].</span><span class="nx">map</span><span class="p">(</span><span class="nx">col</span><span class="o">=&gt;</span><span class="p">{</span>
                  <span class="nx">col</span><span class="p">.</span><span class="nx">attr</span><span class="p">[</span><span class="nx">target</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span> <span class="o">=</span> <span class="nx">autoValue</span><span class="p">;</span>
            <span class="p">});</span>
         <span class="p">}</span>
   
         <span class="k">if</span><span class="p">(</span><span class="nx">closest</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#bCol</span><span class="dl">'</span><span class="p">).</span><span class="nx">checked</span><span class="p">){</span>
            <span class="nx">gantt</span><span class="p">[</span><span class="nx">ganttType</span><span class="p">].</span><span class="nx">map</span><span class="p">(</span><span class="nx">row</span><span class="o">=&gt;</span><span class="p">{</span>
                  <span class="k">return</span> <span class="nx">row</span><span class="p">[</span><span class="nx">colid</span><span class="p">.</span><span class="nx">value</span><span class="p">].</span><span class="nx">attr</span><span class="p">[</span><span class="nx">target</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span> <span class="o">=</span> <span class="nx">autoValue</span><span class="p">;</span>
            <span class="p">});</span>
         <span class="p">}</span>
   
         <span class="nx">gantt</span><span class="p">[</span><span class="nx">ganttType</span><span class="p">][</span><span class="nx">rowid</span><span class="p">.</span><span class="nx">value</span><span class="p">][</span><span class="nx">colid</span><span class="p">.</span><span class="nx">value</span><span class="p">].</span><span class="nx">attr</span><span class="p">[</span><span class="nx">target</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span> <span class="o">=</span> <span class="nx">autoValue</span><span class="p">;</span>
         <span class="k">break</span><span class="p">;</span>
   <span class="p">}</span>
<span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">attrs</code>클래스가 있는 타겟만 통과 시킵니다. 그러면 <code class="language-plaintext highlighter-rouge">Model</code>각 <code class="language-plaintext highlighter-rouge">input</code>에 스타일 이름과 동일한 속성 명<code class="language-plaintext highlighter-rouge">(camel case)</code>을 아이디로 부여합니다</p>

<p>이렇게 코드를 변경하게 되면 자잘한 변수들은 이제 지워도 됩니다. 넘버와 단위를 자동으로 합하고 적용시키기 때문에 불필요한 코드를 줄일 수 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">if</code>문에 있는 내용은 테이블의 <code class="language-plaintext highlighter-rouge">row</code> 혹은 <code class="language-plaintext highlighter-rouge">col</code>에 전체 적용하기 위한 스위치에 대한 내용입니다.</p>

<p><code class="language-plaintext highlighter-rouge">row</code>가 체크되면 해당 셀이 속한 행에 모두 값을 적용시키고, <code class="language-plaintext highlighter-rouge">col</code>이 켜지면 해당 셀이 속한 열에 모두 적용됩니다.</p>

<p>그러면 둘 다 키면 교차로 십자 경로에 있는 모든 셀들이 같이 수정 됩니다.</p>

<p>이제 HTML에 스타일 속성명을 카멜케이스로 가지는 <code class="language-plaintext highlighter-rouge">input</code>만 추가해주면 알아서 추가되는데로 기능이 연결됩니다.</p>

<h2 id="결과물">결과물</h2>

<p>여러 기능을 섞고 개선하면서 현재 결과물은 아래와 같습니다.</p>

<h3 id="차트-예제">차트 예제</h3>

<figure class="text-center">
<span class="w-inline-block">
   <img src="{{site.baseurl}}/assets/images/post/gantt/gantt01.png" alt="sample" title="sample" />
   <figcaption>현재 작업된 내용</figcaption>
</span>
</figure>

<figure class="text-center">
<span class="w-inline-block">
   <img src="{{site.baseurl}}/assets/images/post/gantt/gantt02.png" alt="sample" title="sample" />
   <figcaption>현재 작업된 내용</figcaption>
</span>
</figure>

<figure class="text-center">
<span class="w-inline-block">
   <img src="{{site.baseurl}}/assets/images/post/gantt/gantt03.png" alt="sample" title="sample" />
   <figcaption>현재 작업된 내용</figcaption>
</span>
</figure>

<figure class="text-center">
<span class="w-inline-block">
   <img src="{{site.baseurl}}/assets/images/post/gantt/gantt04.png" alt="sample" title="sample" />
   <figcaption>현재 작업된 내용</figcaption>
</span>
</figure>

<h3 id="업데이트-사항">업데이트 사항</h3>

<h4 id="시트-기능-추가">시트 기능 추가</h4>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://kkn1125.github.io/portfolio/assets/images/portfolio/ganttChart/gantt02.png" alt="sample" title="sample" />
   <figcaption>시트 기능 추가</figcaption>
</span>
</figure>

<h4 id="컨트롤-바-ui-변경">컨트롤 바 UI 변경</h4>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://kkn1125.github.io/portfolio/assets/images/portfolio/ganttChart/gantt03.png" alt="sample" title="sample" />
   <figcaption>컨트롤 바 UI 변경</figcaption>
</span>
</figure>

<h4 id="셀-4방향-추가로-변경">셀 4방향 추가로 변경</h4>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://kkn1125.github.io/portfolio/assets/images/portfolio/ganttChart/gantt04.png" alt="sample" title="sample" />
   <figcaption>셀 4방향 추가로 변경</figcaption>
</span>
</figure>

<h4 id="셀-드래그-선택-기능-추가">셀 드래그 선택 기능 추가</h4>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://kkn1125.github.io/portfolio/assets/images/portfolio/ganttChart/gantt05.png" alt="sample" title="sample" />
   <figcaption>셀 드래그 선택 기능 추가</figcaption>
</span>
</figure>

<p>아래의 간트 차트는 직접 만든 <code class="language-plaintext highlighter-rouge">ganttChart</code>에 의해 만들어졌습니다. 아래 표의 작업 시간은 1채 안 됩니다.</p>

<p>{% include test-table01.html %}</p>

<h2 id="정리">정리</h2>

<p>도식화 툴을 하던 중에 너무 버거워서 잠시 중단했었습니다. 그러다가 테이블을 작업하던 중에 이제 데이터를 어떻게 <code class="language-plaintext highlighter-rouge">CRUD</code>를 간편하게 하는지 조금 알 것 같습니다.</p>

<p>기능이 많다보니 한 번에 처리하고자 하는 마음에 빨리 포기했던 것 같습니다.</p>

<p>웹 툴 기능을 모두 모아 배포를 하는 그 날까지 🙇‍♂️</p>

<p><a href="https://kkn1125.github.io/ganttChart/">테스트 페이지</a></p>
:ET