I"eH<!-- 
Bootstrap5로 Form Error를 제어 해보자
1. bootstrap5와 bootstrap v5
   1. bootstrap5 기준으로 설명
2. bootstrap_form과 bootstrap_alert 사용법
   1. form 속성
   2. alert 속성
3. django에서 Form의 속성
   1. non_field_errors
   2. error_css_class와 required_css_class
   3. error_class의 이해
 -->

<h1 id="bootstrap5로-form-error-제어">Bootstrap5로 Form Error 제어</h1>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">bootstrap5</code>로 생성된 <code class="language-plaintext highlighter-rouge">alert</code>에 클래스를 추가하는 내용에 대한 글이 1도 없어서 악착같이 찾았습니다 😥</p>
</blockquote>

<p>3월에 <code class="language-plaintext highlighter-rouge">ModelForm</code>관련 포스팅을 한 기억이 있습니다. 이번에는 <code class="language-plaintext highlighter-rouge">ValidationError</code>를 통해 생성되는 <code class="language-plaintext highlighter-rouge">Error message</code>를 제어하는 이야기를 하려 합니다.</p>

<p>사용된 라이브러리는 <code class="language-plaintext highlighter-rouge">django-bootstrap5</code>이고, 이야기할 상황은 &#8220;로그인 처리&#8221;입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre><span class="c1"># forms.py
</span>
<span class="c1"># AbstractUser를 상속받은 Profile 클래스의 clean 메서드
</span><span class="k">def</span> <span class="nf">clean</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">email</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">cleaned_data</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'username'</span><span class="p">)</span>
        <span class="n">input_password</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">cleaned_data</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'password'</span><span class="p">)</span>
        <span class="n">find_user</span> <span class="o">=</span> <span class="n">Profile</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="nb">filter</span><span class="p">(</span><span class="n">email</span><span class="o">=</span><span class="n">email</span><span class="p">)</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="n">email</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="ow">not</span> <span class="n">input_password</span><span class="p">):</span>
            <span class="k">raise</span> <span class="n">ValidationError</span><span class="p">(</span><span class="s">'이메일과 비밀번호 중 빈 칸이 있습니다.'</span><span class="p">)</span>
        
        <span class="n">hashed_password</span> <span class="o">=</span> <span class="n">find_user</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">email</span><span class="o">=</span><span class="n">email</span><span class="p">).</span><span class="n">password</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">re</span><span class="p">.</span><span class="n">fullmatch</span><span class="p">(</span><span class="sa">r</span><span class="s">'[\w\d\_\-]+@[A-z]+\.[A-z]+'</span><span class="p">,</span> <span class="n">email</span><span class="p">):</span>
            <span class="k">raise</span> <span class="n">ValidationError</span><span class="p">(</span><span class="s">'잘못된 이메일 형식입니다.'</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">find_user</span><span class="p">.</span><span class="n">exists</span><span class="p">():</span>
            <span class="k">raise</span> <span class="n">ValidationError</span><span class="p">(</span><span class="s">'없는 회원 정보입니다.'</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">check_password</span><span class="p">(</span><span class="n">input_password</span><span class="p">,</span> <span class="n">hashed_password</span><span class="p">):</span>
            <span class="k">raise</span> <span class="n">ValidationError</span><span class="p">(</span><span class="s">'회원정보가 일치하지 않습니다. 이메일과 비밀번호를 확인하세요.'</span><span class="p">)</span>
            
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">cleaned_data</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="bootstrap5-vs-bootstrap-v5">bootstrap5 vs bootstrap-v5</h2>

<blockquote>
  <p>모르시는 분을 위해 먼저 알아야할 것이 있습니다.</p>
</blockquote>

<p>예시를 보다보면 <code class="language-plaintext highlighter-rouge">bootstrap5</code> 혹은 <code class="language-plaintext highlighter-rouge">django_bootstrap5</code>로 라이브러리를 사용하는 경우를 볼 수 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">github</code>저장소를 보면 <code class="language-plaintext highlighter-rouge">ZOSTERA B.V</code>에서 만든 <code class="language-plaintext highlighter-rouge">django-bootstrap5</code>가 원본이고, <code class="language-plaintext highlighter-rouge">django-bootstrap-v5</code>라는 문서는 한 개발자가 <code class="language-plaintext highlighter-rouge">fork</code>하고 수정한 복사본 입니다.</p>

<p>{%raw%}</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>{% load django_bootstrap5 %} ⇐ django-bootstrap5   ✅
{% load bootstrap5 %}        ⇐ django-bootstrap-v5 ❌
</pre></td></tr></tbody></table></code></pre></div></div>

<p>{%endraw%}</p>

<p><code class="language-plaintext highlighter-rouge">django-bootstrap5</code>를 사용해서 이야기를 이어나가겠습니다.</p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">bootstrap5</code>를 사용하지 말라는 뜻이 아닙니다!</p>
</blockquote>

<h2 id="bootstrap_form-사용법">bootstrap_form 사용법</h2>

<p><code class="language-plaintext highlighter-rouge">bootstrap_form</code>에는 3가지 인자가 있고 <code class="language-plaintext highlighter-rouge">layout</code>인자를 사용할 수 있습니다.</p>

<p>{%raw%}</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre>{% load django-bootstrap5 %}

{% bootstrap_form form %}

{% bootstrap_form form exclude="" %}

{% bootstrap_form form exclude="" alert_error_type="" %}

{% bootstrap_form form exclude="" alert_error_type="" layout="inline" %}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>{%endraw%}</p>

<p>사용예시는 위와 같습니다. <code class="language-plaintext highlighter-rouge">form</code>은 <code class="language-plaintext highlighter-rouge">modelForm</code>객체를 말합니다. <code class="language-plaintext highlighter-rouge">exclude</code>는 필드 중에서 제외하고자 하는 필드의 이름을 적습니다. <code class="language-plaintext highlighter-rouge">username</code>과 <code class="language-plaintext highlighter-rouge">password</code>를 모두 제외하고 싶다면, &#8220;username,password&#8221;라고 적으면 됩니다. <code class="language-plaintext highlighter-rouge">password</code>하나만 쓰면 아래와 같이 <code class="language-plaintext highlighter-rouge">email</code>만 표시됩니다.</p>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165701707-5c4fa5f5-5207-4000-b289-9c795bdce814.png" alt="sample" title="sample" />
   <figcaption>exclude - password</figcaption>
</span>
</figure>

<p><code class="language-plaintext highlighter-rouge">alert_error_type</code>은 정해진 값이 있습니다. <code class="language-plaintext highlighter-rouge">all</code>, <code class="language-plaintext highlighter-rouge">fields</code>, <code class="language-plaintext highlighter-rouge">non_fields</code> 세가지 이고, 기본 값이 <code class="language-plaintext highlighter-rouge">non_fields</code>입니다. 빈 칸으로 두게 되면 <code class="language-plaintext highlighter-rouge">error</code> 메시지가 사라집니다.</p>

<p>아래 이미지는 차례대로 적용한 예시입니다.</p>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165687894-ca2114fa-8bca-4063-949e-99c075231a35.png" alt="sample" title="sample" />
   <figcaption>alert_error_type - all</figcaption>
</span>
</figure>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165688025-ea624d1d-20ac-4c85-8f09-2d2eaee42373.png" alt="sample" title="sample" />
   <figcaption>alert_error_type - fields</figcaption>
</span>
</figure>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165688163-cd740007-e676-46b6-8a08-cc8da6e053ce.png" alt="sample" title="sample" />
   <figcaption>alert_error_type - non_fields</figcaption>
</span>
</figure>

<h2 id="bootstrap_alert-사용법">bootstrap_alert 사용법</h2>

<p><code class="language-plaintext highlighter-rouge">bootstrap_alert</code>에는 4가지 인자가 있고, 사용예시는 아래와 같습니다.</p>

<p>{%raw%}</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre>{% load django-bootstrap5 %}

{% bootstrap_alert "Lorem ipsum dolor, sit amet consectetur adipisicing elit. Fugit, quia?" %}

{% bootstrap_alert content %}

{% bootstrap_alert form.errors alert_type="" %}

{% bootstrap_alert form.errors alert_type="" dismissible=True %}

{% bootstrap_alert form.errors alert_type="" dismissible=False %}

{% bootstrap_alert form.non_field_errors.as_text alert_type="danger" dismissible=False extra_classes="pt-5" %}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>{%endraw%}</p>

<p><code class="language-plaintext highlighter-rouge">content</code>영역에는 텍스트를 받습니다. <code class="language-plaintext highlighter-rouge">alert</code>으로 받은 내용을 표시해줍니다. <code class="language-plaintext highlighter-rouge">alert_type</code>은 <code class="language-plaintext highlighter-rouge">bootstrap</code>이 지정한 색상이름 모두 사용가능합니다. info, success, primary, warning, danger 등등</p>

<p><code class="language-plaintext highlighter-rouge">dismissible</code>은 닫을 수 있는지 여부를 설정하며, 기본 값 <code class="language-plaintext highlighter-rouge">True</code>입니다. <code class="language-plaintext highlighter-rouge">False</code>로 지정하면 닫기 버튼 없는 <code class="language-plaintext highlighter-rouge">alert</code>이 표시됩니다.</p>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165704520-df4c0a8f-3ea5-4443-ae23-749370e84d28.png" alt="sample" title="sample" />
   <figcaption>dismissible - False</figcaption>
</span>
</figure>

<p><code class="language-plaintext highlighter-rouge">extra_classes</code>는 <code class="language-plaintext highlighter-rouge">alert</code>이 붙은 태그의 <code class="language-plaintext highlighter-rouge">class</code>속성에 추가할 클래스 이름을 적습니다.</p>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165705065-919d9237-89b2-4954-81fc-85d459046975.png" alt="sample" title="sample" />
   <figcaption>extra_classes - pt-5</figcaption>
</span>
</figure>

<p>이 글을 쓰기 전까지 &#8220;찾아 헤메던 문제&#8221;가 이렇게 허무하게 해결됐습니다 😂</p>

<h2 id="error-class">error-*class</h2>

<p><code class="language-plaintext highlighter-rouge">django</code> 문서를 찾다보니 <code class="language-plaintext highlighter-rouge">error_css_class</code>와 <code class="language-plaintext highlighter-rouge">required_css_class</code> 속성을 발견했습니다. 원하던 문제는 해결했지만 유용한 내용이라 생각합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">class</span> <span class="nc">SigninForm</span><span class="p">(</span><span class="n">AuthenticationForm</span><span class="p">):</span>

    <span class="c1"># 에러가 발생한 행에 클래스를 추가합니다.
</span>    <span class="n">error_css_class</span> <span class="o">=</span> <span class="s">'err'</span>
    <span class="c1"># 필수 항목인 행에 클래스를 추가합니다. 에러와 관계 없이 지정됩니다.
</span>    <span class="n">required_css_class</span> <span class="o">=</span> <span class="s">'kimson'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165706663-b700a572-b815-4278-aae3-d44b2f79a627.png" alt="sample" title="sample" />
   <figcaption>extra_classes - pt-5</figcaption>
</span>
</figure>

<p><code class="language-plaintext highlighter-rouge">required_css_class</code>는 <code class="language-plaintext highlighter-rouge">required</code> 속성이 있는 행에 클래스를 추가하고, <code class="language-plaintext highlighter-rouge">error_css_class</code>는 에러가 발생한 행에만 클래스 명이 붙습니다.</p>

<h2 id="errors와-error_class">*errors와 error_class</h2>

<p>앞서 말한 <code class="language-plaintext highlighter-rouge">bootstrap_alert</code>을 쓰지 않고 <code class="language-plaintext highlighter-rouge">error</code>메시지를 커스터마이징 한다면 어떻게 해야할까요?</p>

<p><code class="language-plaintext highlighter-rouge">bootstrap_form</code>의 인자에서 <code class="language-plaintext highlighter-rouge">alert_error_type</code>을 사용해야하는데요. 아무 설정 없이 사용한다면 아래와 같이 <code class="language-plaintext highlighter-rouge">ul</code>태그에 감싸여 표시됩니다.</p>

<figure class="text-center">
<span class="w-inline-block">
   <img src="https://user-images.githubusercontent.com/71887242/165708132-21c68685-01bb-40e8-ad88-97eaee001a85.png" alt="sample" title="sample" />
   <figcaption>bootstrap_form - alert_error_type</figcaption>
</span>
</figure>

<p>알아낸 내용으로는 래핑하거나 <code class="language-plaintext highlighter-rouge">text</code>로 꺼내는 등의 방법은 모르겠습니다만 <code class="language-plaintext highlighter-rouge">ul</code>태그에 클래스를 지정하는 방법은 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">views.py</code>에서 클래스 명을 추가하는 방법이고, 아래와 같습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">signin</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'POST'</span><span class="p">:</span>
        <span class="c1"># ...
</span>    <span class="k">elif</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'GET'</span><span class="p">:</span>
        <span class="c1"># ...
</span>
    <span class="n">form</span><span class="p">.</span><span class="n">non_field_errors</span><span class="p">().</span><span class="n">error_class</span> <span class="o">=</span> <span class="s">"list-unstyled errorlist nonfield"</span>

    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">'account/signin.html'</span><span class="p">,</span> <span class="p">{</span><span class="s">'form'</span><span class="p">:</span><span class="n">form</span><span class="p">})</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">error_class</code>에 값을 지정 혹은 누적시키면 에러 메시지를 둘러싼 <code class="language-plaintext highlighter-rouge">ul</code>태그의 클래스에 추가 혹은 덮어씁니다.</p>

<h2 id="마무리">마무리</h2>

<p>유용한 정보가 부족하다 생각됩니다. 문서를 보면 바로 나오는 내용이지만 사용해보고 정리하면 누군가는 편하게 접하지 않을까 싶습니다.</p>

<p>모델폼 관련된 내용은 계속해서 업데이트할 예정입니다 😁</p>

<hr />

<p>📚 함께 보면 좋은 내용</p>

<p><a href="https://docs.djangoproject.com/en/4.0/ref/forms/api/#django.forms.ErrorList.error_class" target="_blank">Django Docs::Styling required or erroneous form rows</a></p>

<p><a href="https://django-bootstrap5.readthedocs.io/en/latest/templatetags.html#bootstrap-form" target="_blank">django-bootstrap5::Docs</a></p>
:ET