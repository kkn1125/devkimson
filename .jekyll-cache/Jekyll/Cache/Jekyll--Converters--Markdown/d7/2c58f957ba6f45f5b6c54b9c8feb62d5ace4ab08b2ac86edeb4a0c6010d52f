I":*<h1 id="todo-list">TODO List</h1>

<blockquote>
  <p>USED</p>
</blockquote>

<ul>
  <li>Bootstrap 5.0.2</li>
  <li>JQuery 3.6.0</li>
  <li>VSCode</li>
  <li>Chrome, Firefox ( O )</li>
  <li>IE ( X )</li>
</ul>

<h2 id="추가된-기능">추가된 기능</h2>

<h3 id="todo-list-1">TODO List</h3>

<p>기존 달력에서 크게 추가된 기능은 아래와 같습니다.</p>
<ul>
  <li>클릭된 요일의 연월일 표기</li>
  <li>요일 클릭 안내 및 할일 목록, 빈 목록 안내 - 문구 출력</li>
  <li>요일 클릭 시 할 일 추가 텍스트박스와 버튼 표시</li>
  <li>할 일 추가</li>
</ul>

<h4 id="시작-안내-문구">시작 안내 문구</h4>

<p><img src="/assets/images/post/jsdevKal/devkal-3.png" alt="devkal3" /></p>

<h4 id="할-일-여부에-따른-뱃지와-개수-표기">할 일 여부에 따른 뱃지와 개수 표기</h4>

<p><img src="/assets/images/post/jsdevKal/devkal-4.png" alt="devkal4" /></p>

<h4 id="할-일-추가">할 일 추가</h4>

<p><img src="/assets/images/post/jsdevKal/devkal-5.png" alt="devkal5" /></p>

<p><img src="/assets/images/post/jsdevKal/devkal-7.png" alt="devkal7" /></p>

<h4 id="오늘로-이동-버튼-추가">오늘로 이동 버튼 추가</h4>

<p><img src="/assets/images/post/jsdevKal/devkal-8.png" alt="devkal8" /></p>

<p><img src="/assets/images/post/jsdevKal/devkal-9.png" alt="devkal9" /></p>

<h2 id="수정된-기능">수정된 기능</h2>

<h3 id="비어있는-tr-추가되는-현상-수정">비어있는 tr 추가되는 현상 수정</h3>

<p><img src="/assets/images/post/jsdevKal/devkal-10.png" alt="devkal10" /></p>

<p>요일이 토요일에 딱 떨어지는 달이면 빈 tr이 추가되어 들쭉날쭉하지 않도록 수정했습니다.</p>

<h3 id="설정-값">설정 값</h3>

<p>create할 때 설정값 변경되었습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="kd">const</span> <span class="nx">kal</span> <span class="o">=</span> <span class="nx">com</span><span class="p">.</span><span class="nx">devkimson</span><span class="p">.</span><span class="nx">calendar</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">kal</span><span class="dl">"</span><span class="o">||</span><span class="dl">"</span><span class="s2">kal</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
    <span class="na">marker</span><span class="p">:</span> <span class="p">{</span> <span class="p">...</span> <span class="p">},</span>  <span class="cm">/* 그대로 입니다. */</span>
    <span class="na">table</span><span class="p">:</span> <span class="p">{</span>
        <span class="o">***</span><span class="p">:</span> <span class="dl">"</span><span class="s2"> ... </span><span class="dl">"</span><span class="p">,</span>  <span class="cm">/* 나머지 그대로 입니다. */</span>
        <span class="na">width</span><span class="p">:</span> <span class="dl">"</span><span class="s2">100%</span><span class="dl">"</span><span class="p">,</span>  <span class="cm">/* td로 들어가던 것을 table로 변경했습니다. */</span>
        <span class="na">tr</span><span class="p">:</span> <span class="p">{</span>  <span class="cm">/* tr부분이 새로 추가되었습니다. */</span>
            <span class="na">height</span><span class="p">:</span> <span class="dl">"</span><span class="s2">50px</span><span class="dl">"</span><span class="p">,</span>  <span class="cm">/* tbody 내의 전체 tr의 높이 */</span>
            <span class="na">valign</span><span class="p">:</span> <span class="dl">"</span><span class="s2">middle</span><span class="dl">"</span>  <span class="cm">/* valign속성 그대로 들어갑니다. */</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>알게된 내용</p>
</blockquote>

<p>아주 단순한 코드이기 때문에 바로 아실 것 같습니다.</p>

<p>먼저 처음 달력을 만들때 태그의 id값과 설정값을 받아 한 번에 달력이 생성되어야 했기에 id값과 설정값을 받는 객체를 먼저 생성하고,
초기화 함수, 상단 네비게이션 생성 함수, 요일 생성, 일자 생성 함수, 다음달 함수, 이전달 함수를 만들었고, 원래 각 기능별로 하는 것에 초점을 두기보다 즉석으로 만들어내는 코드로 더욱 조잡해졌습니다.</p>

<p>이것 저것 기능을 추가하다보니 변수도 추가되고, 점점 꼬이는 것 같아 todo list기능을 만들때는 변수와 함수를 미리 정해놓고, 다른 변수 및 함수를 참조하지 않도록 신경을 썼습니다.</p>

<p>첫번째로 변수 스코프때문에 애를 먹었는데 특히 객체형 함수를 사용하다보니 this가 안먹히는 상황이 발생했습니다.
이때 끌어올 변수를 선언한 부분에서 객체.tmp로 임시저장변수를 만들어 000.tmp = { tmpVar: target}으로 어느 곳에서든 사용가능하게 만들어 사용을 했습니다. 이 사용이 어떤 오류를 발생시킬지는 아직 잘 모르겠습니다만, 현재는 무리가 없어 사용 중입니다.</p>

<p>두번째로 위와 비슷한 상황이었고, 동일 객체 내 함수에서 프로퍼티를 가져와 함수 내 지역 스코프에 사용이 안되어 함수에 변수를 만들어 해당 프로퍼티를 저장시키고 사용한 경우입니다.</p>

<p>저와 같은 처지의 분들에게 도움이 되고자 남깁니다…</p>

<p>예제 코드</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="rouge-code"><pre><span class="nx">Obj</span><span class="p">.</span><span class="nx">test</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">prop1</span><span class="p">:</span> <span class="dl">"</span><span class="s2">wow</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">prop2</span><span class="p">:</span> <span class="kd">function</span><span class="p">(){</span>
        <span class="p">...</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prop1</span><span class="p">);</span> <span class="p">(</span> <span class="nx">O</span> <span class="p">)</span>  <span class="cm">/* 함수 내에서 this.prop1하면 wow를 가져옴 */</span>
        <span class="kd">var</span> <span class="nx">prop1</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">prop1</span><span class="p">;</span>
        
        <span class="k">if</span><span class="p">(</span> <span class="p">...</span> <span class="p">){</span>
            <span class="kd">var</span> <span class="nx">prop2Var</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">ABC</span><span class="dl">"</span><span class="p">;</span>
            <span class="cm">/* prop2의 if문 안에 선언된 prop2Var가 지역변수이고 해당 값을 prop3에서 사용하고자 할때 */</span>
            <span class="nx">Obj</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">tmp</span> <span class="o">=</span> <span class="p">{</span>
                <span class="na">prop2var</span><span class="p">:</span> <span class="nx">prop2Var</span>
            <span class="p">}</span>
            <span class="cm">/* this.prop1 ( X ) 함수 내 다른 스코프 내에서는 this.prop1을 못 가져옴 */</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">prop1</span><span class="p">);</span> <span class="p">(</span> <span class="nx">O</span> <span class="p">)</span> <span class="cm">/* "wow" */</span>
        <span class="p">}</span>
    <span class="p">},</span>
    <span class="na">prop3</span><span class="p">:</span> <span class="kd">function</span><span class="p">(){</span>
        <span class="p">...</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">Obj</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">tmp</span><span class="p">.</span><span class="nx">prop2var</span><span class="p">);</span> <span class="cm">/* prop2의 if문 안에 선언되었던 prop2Var 값 ABC 출력 */</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<ul>
  <li>시험버전이므로 데이터가 저장되지 않습니다. 적용전 미리 체험해보시기 바랍니다.</li>
</ul>

<script src="/assets/lib/devkalendar.js"></script>

<div class="spoiler">
    <div>
        <table id="kal" class="table"></table>
    </div>
    </div>

<script>
const kal = com.devkimson.calendar.create(document.getElementById('kal')||'kal',{
		marker:{ // 클릭 위치 마커 관련 설정
			color: "green", // color name or color code
			// thick: "6px", // num
			// style: "dashed", // value
			speed: ".3s", // value
			// bezier: "ease", // value
			// width: "15px" // num
		},
		table:{ // 테이블 속성
			// bgColor: "table-info",
			color: "text-muted", // class name
			width: "80%", // num default auto
			// padding: "15px", // num
			// collapse: "separate", // value
			spacing: ".5rem", // num
			tr:{ // 1.1.0ver 추가
				height: "50px", // num default 50px
				valign: "middle" // num default middle
			}
		},
        today:{
            color: "coral"
        }
	});
</script>

<hr />

<p>요약하면
수정된 기능은 setting부분의 tr조정과 table의 width조정,
추가된 기능은 TODO List 기능과 오늘로 이동, 할일 여부에 따른 뱃지, 개수 표기 입니다.</p>

<blockquote>
  <p>Kalendar.js 1.1.0ver</p>
</blockquote>

<p><a href="/assets/download/devkalendarTODO.zip" download="">devKalendarTODO 1.0.0 ver 다운로드</a></p>

<p>이전 달력만들기에 초기 세팅값에 대해 자세히 적혀있습니다.</p>

<p><a href="/javascript-calendar/">이전 달력 포스팅</a></p>
:ET