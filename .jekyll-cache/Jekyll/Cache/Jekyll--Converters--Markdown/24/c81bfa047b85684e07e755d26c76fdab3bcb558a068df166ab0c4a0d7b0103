I"E7<h1 id="jackson-data-bind">Jackson data bind</h1>

<blockquote>
  <p>사용 dependency</p>

  <ul class="task-list">
    <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />junit : 4.12</li>
    <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />spring-test : 5.3.6</li>
    <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />jackson-databind : 2.12.3</li>
  </ul>
</blockquote>

<h2 id="objectmapper">ObjectMapper</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="nc">ObjectMapper</span> <span class="n">mapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span> <span class="cm">/* 매퍼를 먼저 생성합니다. */</span>

<span class="cm">/* 객체를 JSON형태로 변환하는 방법 */</span>
<span class="nc">String</span> <span class="n">stringInJSON01</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="nc">Object</span><span class="o">);</span> <span class="cm">/* 객체를 JSON String 으로 변환 :: String */</span>
<span class="nc">String</span> <span class="n">stringInJSON02</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">writeWithDefaultPrettyPrinter</span><span class="o">().</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="nc">Object</span><span class="o">);</span> 
<span class="cm">/* 객체를 JSON String 으로 변환 및 정렬 */</span>

<span class="n">mapper</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"path"</span><span class="o">),</span> <span class="nc">Object</span><span class="o">);</span> <span class="cm">/* 객체를 JSON 파일로 변환 :: void */</span>

<span class="cm">/* JSON형태를 객체로 변환하는 방법 */</span>
<span class="nc">String</span> <span class="n">jsonTest</span> <span class="o">=</span> <span class="s">"{"</span><span class="n">name</span><span class="s">":"</span><span class="n">whatson</span><span class="s">","</span><span class="n">age</span><span class="s">":15,"</span><span class="n">messages</span><span class="s">":["</span><span class="n">test</span><span class="s">","</span><span class="n">might</span><span class="s">"]}"</span><span class="o">;</span>
<span class="nc">Class</span> <span class="kd">class</span> <span class="err">=</span> <span class="nc">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="n">jsonTest</span><span class="o">,</span> <span class="nc">Class</span><span class="o">.</span><span class="na">class</span><span class="o">);</span> <span class="cm">/* JSON String을 객체로 변환 */</span>
<span class="nc">Class</span> <span class="kd">class</span> <span class="err">=</span> <span class="nc">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"path"</span><span class="o">),</span> <span class="nc">Class</span><span class="o">.</span><span class="na">class</span><span class="o">);</span> <span class="cm">/* JSON 파일을 객체로 변환 */</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="list로-json-다루기">List로 Json 다루기</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="nc">ObjectMapper</span> <span class="n">mapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span> <span class="cm">/* 매퍼를 먼저 생성합니다. */</span>

<span class="cm">/* 객체를 JSON형태로 변환하는 방법 */</span>
<span class="nc">String</span> <span class="n">stringInJSON01</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="nc">Object</span><span class="o">);</span> <span class="cm">/* 객체를 JSON String 으로 변환 :: String */</span>
<span class="nc">String</span> <span class="n">stringInJSON02</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">writeWithDefaultPrettyPrinter</span><span class="o">().</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="nc">Object</span><span class="o">);</span> 

<span class="cm">/* 객체를 JSON String 으로 변환 및 정렬
mapper.writeValue(new File("path"), Object); /* 객체를 JSON 파일로 변환 :: void */</span>

<span class="cm">/* JSON형태를 객체로 변환하는 방법 */</span>
<span class="nc">String</span> <span class="n">jsonTest</span> <span class="o">=</span> <span class="s">"{"</span><span class="n">name</span><span class="s">":"</span><span class="n">whatson</span><span class="s">","</span><span class="n">age</span><span class="s">":15,"</span><span class="n">messages</span><span class="s">":["</span><span class="n">test</span><span class="s">","</span><span class="n">might</span><span class="s">"]}"</span><span class="o">;</span>
<span class="nc">Class</span> <span class="kd">class</span> <span class="err">=</span> <span class="nc">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="n">jsonTest</span><span class="o">,</span> <span class="nc">Class</span><span class="o">.</span><span class="na">class</span><span class="o">);</span> <span class="cm">/* JSON String을 객체로 변환 */</span>
<span class="nc">Class</span> <span class="kd">class</span> <span class="err">=</span> <span class="nc">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"path"</span><span class="o">),</span> <span class="nc">Class</span><span class="o">.</span><span class="na">class</span><span class="o">);</span> <span class="cm">/* JSON 파일을 객체로 변환 */</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="array로-json-다루기">Array로 Json 다루기</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="nc">ObjectMapper</span> <span class="n">mapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
<span class="nc">Class</span> <span class="kd">class</span> <span class="err">=</span> <span class="nc">new</span> <span class="nc">Class</span><span class="o">();</span>

<span class="cm">/* 배열를 JSON 파일로 변환 */</span>
<span class="nc">Class</span><span class="o">[]</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Class</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
<span class="n">list</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="kd">class</span><span class="err">;</span>
<span class="nc">mapper</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"path"</span><span class="o">),</span> <span class="n">list</span><span class="o">);</span>
<span class="cm">/* [{"key01":"value01","key02":"value02"}] 로 저장 */</span>

<span class="cm">/* JSON 파일(배열방식)을 배열로 변환 */</span>
<span class="nc">Class</span><span class="o">[]</span> <span class="n">list2</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"path"</span><span class="o">),</span> <span class="nc">Class</span><span class="o">[].</span><span class="na">class</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"List2 : "</span> <span class="o">+</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">list2</span><span class="o">));</span> <span class="cm">/* [ ... 상동 ... ] */</span>
<span class="cm">/* list2[0] &gt;&gt; {"key01":"value01"} */</span>
<span class="cm">/* list2[1] &gt;&gt; {"key02":"value02"} */</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>기본적으로 <code class="language-plaintext highlighter-rouge">writeValue</code>와 <code class="language-plaintext highlighter-rouge">readValue</code>는 하나의 객체를 읽고 쓰는 것은 간단했지만 <code class="language-plaintext highlighter-rouge">List</code>와 배열로 주고 받을 일이 생겨 테스트해봤습니다.</p>

<p><code class="language-plaintext highlighter-rouge">VO</code>내에 자신을 참조하는 <code class="language-plaintext highlighter-rouge">getList :: List</code> 를 만들어, <code class="language-plaintext highlighter-rouge">Controller</code>에서 받을 때 <code class="language-plaintext highlighter-rouge">VO</code>를 받아 <code class="language-plaintext highlighter-rouge">getList</code>를 써서 따로 <code class="language-plaintext highlighter-rouge">Json</code>으로 바꾸는 방법이 있었지만 개인적으로 다루기가 더 번거로워서 이렇게 사용하는게 더 쉽다고 판단됩니다.</p>

<ul>
  <li>아래 코드는 작업 중에 <code class="language-plaintext highlighter-rouge">List</code>로 <code class="language-plaintext highlighter-rouge">Json</code>파일 변환하게 되었던 것을 예제로 남기겠습니다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="nd">@PostMapping</span><span class="o">(</span><span class="s">"post"</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">post</span><span class="o">(</span><span class="nc">User</span> <span class="n">user</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">ObjectMapper</span> <span class="n">mapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>

    <span class="k">try</span> <span class="o">{</span>
        <span class="nc">List</span> <span class="n">list</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"c:user.json"</span><span class="o">),</span> <span class="k">new</span> <span class="nc">TypeReference</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;(){});</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
        <span class="n">mapper</span><span class="o">.</span><span class="na">writeValue</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"c:user.json"</span><span class="o">),</span> <span class="n">list</span><span class="o">);</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JsonGenerationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JsonMappingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">return</span> <span class="s">"redirect:/path"</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="참고-사이트">참고 사이트</h3>

<p><a href="https://becko.tistory.com/47" target="_blank">Json파일 List타입으로 받아오기</a></p>

<p><a href="https://tychejin.tistory.com/134" target="_blank">jackson databind의 기본 활용</a></p>
:ET