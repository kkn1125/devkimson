I"ՙ<h1 id="파이썬-문제-자바스크립트-변환">파이썬 문제 자바스크립트 변환</h1>

<p>코드업의 Python 기초 100제 중 6098번 문제를 풀던 중에 html에서 보이도록 만들어보고자 하는 생각에 코드를 다시 곱씹어 볼 겸 자바스크립트로 옮겨서 만들기 시작했습니다.</p>

<h2 id="코드를-옮기자">코드를 옮기자</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;table</span> <span class="na">class=</span><span class="s">"table text-center mx-auto"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;thead&gt;</span>
            <span class="nt">&lt;tr&gt;</span>
                <span class="nt">&lt;th</span> <span class="na">colspan=</span><span class="s">"10"</span><span class="nt">&gt;</span>길찾기<span class="nt">&lt;/th&gt;</span>
            <span class="nt">&lt;/tr&gt;</span>
        <span class="nt">&lt;/thead&gt;</span>
        <span class="nt">&lt;tbody</span> <span class="na">id=</span><span class="s">"list"</span><span class="nt">&gt;</span>

        <span class="nt">&lt;/tbody&gt;</span>
    <span class="nt">&lt;/table&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>html은 tbody에 2차 배열로 tr, td를 뿌릴 것 임으로 틀만 짜줍니다.</p>

<p>파이썬 문제에서는 개미가 길을 찾을 지도를 입력으로 받습니다. 문제에서 <code class="language-plaintext highlighter-rouge">10 x 10</code> 크기였습니다.</p>

<p>테스터케이스의 입력으로는 총 10번, 1번에 10개의 수가 담겨있는 것입니다.</p>

<p>자바스크립트로 구현한 경우는 제가 지도를 임의로 넣기에 문자열을 바로 가공했습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="cm">/*
또 다른 예제
1 1 1 1 1 1 1 1 1 1
1 0 0 1 0 0 0 0 0 1
1 0 0 1 1 1 0 0 0 1
1 1 0 0 0 1 0 1 0 1
1 0 1 1 0 0 0 0 0 1
1 0 0 1 0 1 0 1 0 1
1 0 0 0 0 1 0 1 0 1
1 0 0 0 0 1 0 0 0 1
1 0 0 0 0 0 0 0 0 1
1 1 1 1 1 1 1 1 1 1
*/</span>
<span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="s2">`
1 1 1 1 1 1 1 1 1 1
1 0 0 1 0 0 0 0 0 1
1 0 0 1 1 1 0 0 0 1
1 0 2 0 0 0 0 1 0 1
1 0 0 0 0 0 0 1 0 1
1 0 0 0 0 1 0 1 0 1
1 0 0 0 0 1 2 1 0 1
1 0 0 0 0 1 0 0 0 1
1 0 0 0 0 0 0 0 0 1
1 1 1 1 1 1 1 1 1 1
`</span>
<span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="dl">'</span><span class="se">\n</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1"> </span><span class="dl">'</span><span class="p">)</span>
<span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1"> </span><span class="dl">'</span><span class="p">)</span>
<span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">x</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">x</span> <span class="o">!=</span> <span class="dl">''</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">1</code>은 벽(장애물), <code class="language-plaintext highlighter-rouge">0</code>은 지나다닐 수 있는 길, <code class="language-plaintext highlighter-rouge">2</code>는 먹이 입니다.</p>

<p>규칙을 이렇습니다.</p>

<ol>
  <li>장애물을 만나면 통과하지 못하고, 막히지 않은 방향으로 전진한다.</li>
  <li><code class="language-plaintext highlighter-rouge">0</code>을 지나면 지난 자리마다 <code class="language-plaintext highlighter-rouge">9</code>로 변환시켜 지나온 자리를 표시한다.</li>
  <li><code class="language-plaintext highlighter-rouge">2</code>와 닿으면 먹이를 먹고 <code class="language-plaintext highlighter-rouge">9</code>로 바꾼 뒤 길찾기를 종료한다.</li>
  <li>가던 중 모서리에 도달하여 움직이지 못하면 길찾기를 종료한다.</li>
</ol>

<p>룰은 단순합니다. 어제 찾으면서 <code class="language-plaintext highlighter-rouge">bfs</code>와 <code class="language-plaintext highlighter-rouge">dfs</code>를 알게 되었는데 이는 추후에 알아보고 자동으로 길을 사방으로 탐색하도록 하여 다시 포스팅하려합니다.</p>

<p>이어서 파이썬 코드를 자바스크립트로 변환 후 <code class="language-plaintext highlighter-rouge">html</code> <code class="language-plaintext highlighter-rouge">table</code>에 색칠하여 뿌려봅시다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="rouge-code"><pre><span class="c1">// 입력 받은 지도를 2차배열에 담음</span>
<span class="kd">const</span> <span class="nx">limit</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span> <span class="c1">// 지도 범위 10 x 10</span>
<span class="kd">let</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nb">Array</span><span class="p">(</span><span class="nx">limit</span> <span class="o">+</span> <span class="mi">1</span><span class="p">),</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">limit</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
<span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">q</span><span class="o">&lt;</span><span class="nx">limit</span><span class="p">;</span> <span class="nx">q</span><span class="o">++</span><span class="p">){</span>
    <span class="kd">let</span> <span class="nx">sl</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">slice</span><span class="p">(((</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">limit</span><span class="p">,</span> <span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">limit</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">j</span><span class="o">&lt;</span><span class="nx">limit</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">){</span>
        <span class="nx">d</span><span class="p">[</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nx">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nx">sl</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// #list에 뿌림</span>
<span class="kd">let</span> <span class="p">[</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">];</span>
<span class="kd">const</span> <span class="nx">list</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">list</span><span class="dl">'</span><span class="p">);</span>
<span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">q</span><span class="o">&lt;</span><span class="nx">limit</span><span class="p">;</span> <span class="nx">q</span><span class="o">++</span><span class="p">){</span>
    <span class="kd">let</span> <span class="nx">tr</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">tr</span><span class="dl">'</span><span class="p">);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">j</span><span class="o">&lt;</span><span class="nx">limit</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">){</span>
        <span class="kd">let</span> <span class="nx">td</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">td</span><span class="dl">'</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nx">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
            <span class="nx">td</span><span class="p">.</span><span class="nx">style</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">background-color: rgba(31, 19, 12, 0.925); width: 50px</span><span class="dl">'</span><span class="p">;</span>
            <span class="nx">td</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">num</span><span class="o">=</span><span class="mi">1</span>
            <span class="nx">tr</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">td</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nx">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="mi">2</span><span class="p">){</span>
            <span class="nx">td</span><span class="p">.</span><span class="nx">style</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">background-color: rgba(236, 121, 54, 0.1); width: 50px</span><span class="dl">'</span><span class="p">;</span>
            <span class="nx">td</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">num</span><span class="o">=</span><span class="mi">2</span>
            <span class="nx">tr</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">td</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nx">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
            <span class="nx">td</span><span class="p">.</span><span class="nx">style</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">background-color: rgba(157, 247, 130, 0.459); width: 50px</span><span class="dl">'</span><span class="p">;</span>
            <span class="nx">td</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">num</span><span class="o">=</span><span class="mi">0</span>
            <span class="nx">tr</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">td</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="o">==</span><span class="nx">x</span> <span class="o">&amp;&amp;</span> <span class="nx">j</span><span class="o">+</span><span class="mi">1</span><span class="o">==</span><span class="nx">y</span><span class="p">){</span>
            <span class="nx">td</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="dl">"</span><span class="s2">class</span><span class="dl">"</span><span class="p">,</span> <span class="dl">'</span><span class="s1">ant</span><span class="dl">'</span><span class="p">);</span>
            <span class="nx">tr</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">td</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="nx">tr</span><span class="p">.</span><span class="nx">style</span><span class="o">=</span><span class="dl">"</span><span class="s2">height: 50px</span><span class="dl">"</span><span class="p">;</span>
    <span class="nx">list</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">tr</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/post/getDirection/ant01.png" alt="ant" />
<span class="text-muted badge">- <em>CSS 코드는 맨 아래 올려두겠습니다.</em></span></p>

<p>분홍색 칸이 먹이이고, 갈색이 벽, 초록이 갈 수 있는 곳, 동그란 녀석이 개미입니다.</p>

<p>숫자 지도보다 역시 색감있고 네모네모한게 보기 좋은 것 같습니다.</p>

<p>이어서 길을 제대로 찾아 경로가 잘 뜨는지 보겠습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="rouge-code"><pre><span class="kd">let</span> <span class="nx">speed</span> <span class="o">=</span> <span class="mi">200</span><span class="p">;</span> <span class="c1">// 개미 길 찾는 속도</span>
<span class="kd">let</span> <span class="nx">find</span> <span class="o">=</span> <span class="nx">setInterval</span><span class="p">(</span><span class="nx">pathfind</span><span class="p">,</span> <span class="nx">speed</span><span class="p">);</span>
<span class="kd">let</span> <span class="nx">xl</span> <span class="o">=</span> <span class="kc">false</span>
<span class="kd">let</span> <span class="nx">yl</span> <span class="o">=</span> <span class="kc">false</span>
<span class="c1">// while (true){</span>
<span class="kd">function</span> <span class="nx">pathfind</span><span class="p">(){</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">x</span> <span class="o">&gt;=</span> <span class="mi">9</span> <span class="o">&amp;&amp;</span> <span class="nx">y</span> <span class="o">&gt;=</span> <span class="mi">9</span><span class="p">){</span>
        <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">find</span><span class="p">);</span>
        <span class="nx">setTimeout</span><span class="p">(()</span><span class="o">=&gt;</span><span class="p">{</span>
            <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">개미가 갈 곳이 없습니다.</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">},</span> <span class="mi">300</span><span class="p">);</span>
        <span class="c1">// break</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
        <span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
        <span class="nx">list</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">x</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">children</span><span class="p">[</span><span class="nx">y</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">style</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">background-color: rgba(85, 231, 231, 0.459)</span><span class="dl">'</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">){</span>  <span class="c1">// x방향 장애물 피하기</span>
        <span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
        <span class="nx">list</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">x</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">children</span><span class="p">[</span><span class="nx">y</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">style</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">background-color: rgba(85, 231, 231, 0.8)</span><span class="dl">'</span><span class="p">;</span>
        <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">find</span><span class="p">);</span>
        <span class="nx">setTimeout</span><span class="p">(()</span><span class="o">=&gt;</span><span class="p">{</span>
            <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">개미가 먹이을 찾았습니다.</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">},</span> <span class="mi">300</span><span class="p">);</span>
        <span class="c1">// break;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>  <span class="c1">// y방향 전진</span>
        <span class="nx">y</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
        <span class="nx">x</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
            <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">find</span><span class="p">);</span>
            <span class="nx">setTimeout</span><span class="p">(()</span><span class="o">=&gt;</span><span class="p">{</span>
                <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">개미가 막다른 길에 막혔습니다.</span><span class="dl">"</span><span class="p">);</span>
            <span class="p">},</span> <span class="mi">300</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>  <span class="c1">// y방향 장애물 피하기</span>
        <span class="nx">y</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
            <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">find</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">][</span><span class="nx">y</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">){</span>
        <span class="nx">y</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">){</span>
        <span class="nx">x</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>아직 파이썬 문제를 풀고 계시는 분이라면 이 코드를 참고하기 보다 다른 코드를 참고바랍니다. html에 연결시키다보니 출제된 문제를 푼 코드와 조금 다릅니다.</p>
</blockquote>

<p>한 가지 작동방식에서 아쉬운 점은 방향성이 단 두 가지 뿐이라 길찾기라는 이름을 붙이기도 애매 합니다. 하지만 이렇게라도 만들어보니 사방으로 탐색할 수 있도록 하기 위해 무엇이 필요한지는 감이 옵니다.</p>

<p>아래는 테스터 케이스를 주어 반복되는 예제를 올려두었습니다. 보고 참고 바랍니다. 소스코드는 지금 포스트의 내용을 조합하면 작동합니다.</p>

<hr />

<hr style="color: coral;" />

<h3 id="길찾기">길찾기</h3>

<style>
    td{
    position: relative;
}

.table{
    width: auto;
}

td::after{
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.1);
    opacity: 0;
    transition: 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    -webkit-transition: 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    -moz-transition: 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    -ms-transition: 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    -o-transition: 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}
td:hover::after{
    opacity: 1;
    color: rgba(85, 231, 231, 0.459)
}

.ant:before{
    content: "";
    background-image: url(/assets/images/post/getDirection/ant00.png);
    background-size: contain;
    background-repeat: no-repeat;
    font-size: 10px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: block;
    width: 60%;
    height: 60%;
    opacity: 1;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
}

.ant.moved:before{
    opacity: 0 !important;
}
</style>

<table class="table text-center mx-auto">
    <tbody id="list">
    </tbody>
</table>
<div class="px-5">
    <button onclick="start()" class="btn btn-outline-info" style="z-index:10;">Start</button>
    <button onclick="stop()" class="btn btn-outline-danger" style="z-index:10;">Stop</button>
</div>

<script>
    let count = 0;
let mapList = [];
mapList.push(`
1 1 1 1 1 1 1 1 1 1
1 0 0 0 0 0 0 1 0 1
1 1 0 1 1 1 0 0 0 1
1 0 1 1 0 0 0 1 0 1
1 0 2 0 0 1 0 1 0 1
1 0 0 1 1 1 0 1 2 1
1 0 0 0 0 1 1 1 0 1
1 0 0 0 0 1 0 0 0 1
1 0 0 0 0 0 0 0 0 1
1 1 1 1 1 1 1 1 1 1
`);
mapList.push(`
1 1 1 1 1 1 1 1 1 1
1 0 0 1 0 0 0 0 0 1
1 0 0 1 1 1 0 0 0 1
1 0 2 0 0 0 0 1 0 1
1 0 0 0 0 0 0 1 0 1
1 0 0 0 0 1 0 1 0 1
1 0 0 0 0 1 0 1 0 1
1 0 0 0 0 1 0 2 0 1
1 0 0 0 0 0 0 0 0 1
1 1 1 1 1 1 1 1 1 1
`);
mapList.push(`
1 1 1 1 1 1 1 1 1 1
1 0 0 1 0 0 0 0 0 1
1 0 1 1 1 1 0 0 0 1
1 0 2 0 0 0 0 1 0 1
1 0 0 0 0 0 0 1 0 1
1 0 0 0 0 1 0 1 0 1
1 0 0 0 0 1 0 1 0 1
1 0 0 0 0 1 0 0 0 1
1 0 0 0 0 0 0 0 0 1
1 1 1 1 1 1 1 1 1 1
`);
mapList.push(`
1 1 1 1 1 1 1 1 1 1
1 0 0 1 0 0 0 0 0 1
1 0 0 1 1 1 0 0 0 1
1 0 0 0 0 0 0 1 0 1
1 0 0 0 0 0 0 1 0 1
1 0 0 0 0 1 0 1 0 1
1 0 1 1 0 1 0 1 0 1
1 0 0 1 0 1 0 0 0 1
1 0 0 0 0 0 0 0 0 1
1 1 1 1 1 1 1 1 1 1
`);

const limit = 10;
let [x, y] = [2,2];
const list = document.getElementById('list');

let arr = getArr(mapList[count]);

function getArr(data){
    let ar = data
    .replaceAll('\n', ' ')
    .split(' ')
    .filter(x => {
        if (x != '') {
            return true;
        }
    });
    let tmpa = Array.from(Array(limit + 1), () => new Array(limit + 1));
    for(let q=0; q<limit; q++){
        let sl = ar.slice(((q+1)-1)*limit, (q+1)*limit);
        for(let j=0; j<limit; j++){
            tmpa[q+1][j+1] = sl[j];
        }
    }
    return tmpa;
}

draw(arr);

// let d = setArr(arr);
function draw(d){
    for(let q=0; q<limit; q++){
        let tr = document.createElement('tr');
        
        for(let j=0; j<limit; j++){
            let td = document.createElement('td');
            if(d[q+1][j+1]==1){
                // rgba(31, 19, 12, 0.925);
                td.style = `
                background-image: url(/assets/images/post/getDirection/stone.png);
                background-size: cover;
                background-repeat: no-repeat;
                width: 50px;`;
                td.dataset.num=1
                tr.appendChild(td);
            } else if (d[q+1][j+1]==2){
                // #DE9B1B;
                td.style = `
                background-image: url(/assets/images/post/getDirection/sa00.png);
                background-size: cover;
                background-repeat: no-repeat;
                width: 50px`;
                td.dataset.num=2
                tr.appendChild(td);
            } else if (d[q+1][j+1]==0){
                td.style = `
                background-color: transparent;
                width: 50px`;
                td.dataset.num=0
                tr.appendChild(td);
            }
            if (q+1==x && j+1==y){
                td.setAttribute("class", 'ant');
                tr.appendChild(td);
            }
        }
        tr.style="height: 50px";
        list.appendChild(tr);
    }
}

let speed = 200;
let xl = false;
let find;

function start(){
    find = setInterval(pathfind, speed, arr);
}

function stop(){
    clearInterval(find);
}

function pathfind(d){
    
        
    if (x >= 9 && y >= 9){
        clearInterval(find);
        setTimeout(()=>{
            alert("개미가 갈 곳이 없습니다.");
            xl=true;
            lotation(xl);
        }, 100);
        // break
    }
    if (d[x][y] == 0){
        d[x][y] = 9;
        list.children[x-1].children[y-1].style = 'background-color: rgba(85, 231, 231, 0.459)';
        if(document.querySelector('.ant')){
            document.querySelector('.ant').classList.remove('ant');
        }
        list.children[x-1].children[y-1].classList.add('ant');
    } else if (d[x][y] == 2){  // x방향 장애물 피하기
        d[x][y] = 9;
        list.children[x-1].children[y-1].style = 'background-color: rgba(85, 231, 231, 0.8)';
        if(document.querySelector('.ant')){
            document.querySelector('.ant').classList.remove('ant');
        }
        list.children[x-1].children[y-1].classList.add('ant');
        clearInterval(find);
        setTimeout(()=>{
            alert("개미가 먹이을 찾았습니다.");
            xl=true;
            lotation(xl);
        }, 100);
        // break;
    } else if (d[x][y+1] == 0){  // y방향 전진
        y += 1;
    } else if (d[x][y+1] == 1){
        x += 1;
        if(d[x][y]==1){
            clearInterval(find);
            setTimeout(()=>{
                alert("개미가 막다른 길에 막혔습니다.");
                xl=true;
                lotation(xl);
            }, 100);
        }
    } else if (d[x+1][y] == 1){  // y방향 장애물 피하기
        y += 1;
        if(d[x][y]==1){
            clearInterval(find);
        }
    } else if (d[x][y+1] == 2){
        y += 1;
    } else if (d[x+1][y] == 2){
        x += 1;
    } 
}

function lotation(xl){
    if(xl){
        list.innerHTML = '';
        count++;
        if (count>3) count = 0;
        arr = getArr(mapList[count]);
        x=2;
        y=2;
        draw(arr);
        xl=false;
        find = setInterval(pathfind, speed, arr);
    }
}
</script>

<hr style="color: coral;" />

<blockquote>
  <p>CSS 코드</p>
</blockquote>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="rouge-code"><pre><span class="nt">td</span><span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.table</span><span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="nb">auto</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">td</span><span class="nd">::after</span><span class="p">{</span>
    <span class="nl">content</span><span class="p">:</span> <span class="s1">""</span><span class="p">;</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">left</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0.1</span><span class="p">);</span>
    <span class="nl">opacity</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">transition</span><span class="p">:</span> <span class="m">1s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">0.075</span><span class="p">,</span> <span class="m">0.82</span><span class="p">,</span> <span class="m">0.165</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
    <span class="nl">-webkit-transition</span><span class="p">:</span> <span class="m">1s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">0.075</span><span class="p">,</span> <span class="m">0.82</span><span class="p">,</span> <span class="m">0.165</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
    <span class="nl">-moz-transition</span><span class="p">:</span> <span class="m">1s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">0.075</span><span class="p">,</span> <span class="m">0.82</span><span class="p">,</span> <span class="m">0.165</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
    <span class="nl">-ms-transition</span><span class="p">:</span> <span class="m">1s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">0.075</span><span class="p">,</span> <span class="m">0.82</span><span class="p">,</span> <span class="m">0.165</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
    <span class="nl">-o-transition</span><span class="p">:</span> <span class="m">1s</span> <span class="n">cubic-bezier</span><span class="p">(</span><span class="m">0.075</span><span class="p">,</span> <span class="m">0.82</span><span class="p">,</span> <span class="m">0.165</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
<span class="p">}</span>
<span class="nt">td</span><span class="nd">:hover::after</span><span class="p">{</span>
    <span class="nl">opacity</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">85</span><span class="p">,</span> <span class="m">231</span><span class="p">,</span> <span class="m">231</span><span class="p">,</span> <span class="m">0.459</span><span class="p">)</span>
<span class="p">}</span>

<span class="nc">.ant</span><span class="nd">:before</span><span class="p">{</span>
    <span class="nl">content</span><span class="p">:</span> <span class="s1">""</span><span class="p">;</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    <span class="nl">left</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    <span class="nl">transform</span><span class="p">:</span> <span class="n">translate</span><span class="p">(</span><span class="m">-50%</span><span class="p">,</span> <span class="m">-50%</span><span class="p">);</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">60%</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">60%</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">21</span><span class="p">,</span> <span class="m">15</span><span class="p">,</span> <span class="m">116</span><span class="p">,</span> <span class="m">0.671</span><span class="p">);</span>
    <span class="nl">opacity</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
    <span class="nl">-webkit-border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    <span class="nl">-moz-border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    <span class="nl">-ms-border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    <span class="nl">-o-border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
    <span class="nl">-webkit-transform</span><span class="p">:</span> <span class="n">translate</span><span class="p">(</span><span class="m">-50%</span><span class="p">,</span> <span class="m">-50%</span><span class="p">);</span>
    <span class="nl">-moz-transform</span><span class="p">:</span> <span class="n">translate</span><span class="p">(</span><span class="m">-50%</span><span class="p">,</span> <span class="m">-50%</span><span class="p">);</span>
    <span class="nl">-ms-transform</span><span class="p">:</span> <span class="n">translate</span><span class="p">(</span><span class="m">-50%</span><span class="p">,</span> <span class="m">-50%</span><span class="p">);</span>
    <span class="nl">-o-transform</span><span class="p">:</span> <span class="n">translate</span><span class="p">(</span><span class="m">-50%</span><span class="p">,</span> <span class="m">-50%</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET