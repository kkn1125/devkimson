I"	<h1 id="iterable-알아보기">Iterable 알아보기</h1>

<h2 id="iteration-protocols">Iteration Protocols</h2>

<blockquote>
  <p>ECMAScript 2015(ES6)에 추가되었으며 2개의 protocol이 있습니다.</p>

  <p>먼저 심볼에 대해 알아보려합니다. 이전에 투두리스트에 올려두었던 <code class="language-plaintext highlighter-rouge">Iterable</code>은 <code class="language-plaintext highlighter-rouge">Object.defineProperty</code>를 사용하다가 Enumerable과 함께 설명하려고 체크해두었는데 이제야 작성하게 됩니다.</p>
</blockquote>

<ol>
  <li>iterable protocol</li>
  <li>iterator protocol</li>
</ol>

<p>큰 주제는 Iteration입니다. iteration동작을 정의나, for..of의 loop, 사용자 정의 등을 허용합니다. 그 안에 주요한 개념인 2개의 protocol이 있습니다. <code class="language-plaintext highlighter-rouge">Iterator(반복자)</code>와 <code class="language-plaintext highlighter-rouge">Iterable(반복가능한)</code>인데요.</p>

<p>어떤 내용인지 천천히 살펴보겠습니다.</p>

<h3 id="iterable-protocol">Iterable protocol</h3>

<p><code class="language-plaintext highlighter-rouge">iterable protocol</code>은 <code class="language-plaintext highlighter-rouge">javascript</code>객체들이 for..of 구조에서 <code class="language-plaintext highlighter-rouge">iteration</code>동작을 정의하거나 사용자 정의하는 것을 허용합니다.</p>

<p>즉, <code class="language-plaintext highlighter-rouge">iterable</code>한 객체라는 것은 <code class="language-plaintext highlighter-rouge">@@iterator</code>메서드를 구현해야하며, <code class="language-plaintext highlighter-rouge">object</code> 또는 <code class="language-plaintext highlighter-rouge">prototype chain</code> 오브젝트 중 하나가 <code class="language-plaintext highlighter-rouge">Symbol.iterator</code> key 속성을 가져야 한다는 것을 의미하고, 자기자신(iterator)를 리턴해야합니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET