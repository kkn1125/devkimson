I"J<h1 id="스크롤-애니메이션-구현">스크롤 애니메이션 구현</h1>

<p>이번 시간에는 스크롤바를 없애고 슬라이드방식의 페이지를 구현해보려합니다. 남의 코드를 계속 염탐하다보니 정작 나중에 다시 보면 이해가 안되는 경우가 더러 있었습니다.</p>

<p>좋은 버릇도 아닐뿐더러 생각하는 힘을 기르는데는 좋은 것 같습니다.</p>

<p>원래는 화면 뷰포트를 감지하는 코드를 참고해서 만들고자 하였지만 이 또한 만들고나서 참고해보자는 마음에 구현된 기능을 정리하여 올립니다.</p>

<h2 id="스크롤바-없애기">스크롤바 없애기</h2>

<p>간단합니다. 그저 <code class="language-plaintext highlighter-rouge">css</code>에서 <code class="language-plaintext highlighter-rouge">body</code>(혹은 대상 요소)의 <code class="language-plaintext highlighter-rouge">overflowY</code>를 <code class="language-plaintext highlighter-rouge">hidden</code>값만 주면 사라집니다. 설정한 후가 문제입니다.</p>

<h2 id="스크롤-구현하기">스크롤 구현하기</h2>

<p>먼저 필요한 기능부터 살펴보겠습니다.</p>

<ol>
  <li>휠을 굴릴 때 상하 감지
    <ul>
      <li>해당 방향으로 섹션 이동</li>
    </ul>
  </li>
  <li>상하 이동</li>
  <li>새로고침 or 페이지 이동 시 초기화</li>
</ol>

<p>간단하게 약 3가지의 기능을 구현해보겠습니다. 이정도 기능이면 충분히 슬라이드 페이지를 조잡하게라도 흉내낼수 있었습니다.</p>

<h3 id="샘플-만들기">샘플 만들기</h3>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"btns"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button&gt;</span>Up<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;button&gt;</span>Down<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="c">&lt;!-- 3~4개 정도의 샘플 section 태그 --&gt;</span>
<span class="nt">&lt;section&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Test1<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quo, tenetur blanditiis distinctio consequatur quos vitae iure impedit a quibusdam facere aspernatur nam veritatis quae iusto similique dolores quam earum perferendis.<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;/section&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
</pre></td><td class="rouge-code"><pre><span class="c">/* 필요하다면 다른 태그들 초기화 해주시기바랍니다. */</span>
<span class="nt">html</span><span class="o">,</span>
<span class="nt">body</span><span class="o">,</span>
<span class="nt">section</span><span class="o">,</span>
<span class="nt">h1</span><span class="o">,</span>
<span class="nt">div</span><span class="p">{</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/**
 * 반응형을 고려하여 body의 overflow를
 * 특정 사이즈에서만 사라지도록 했습니다.
 */</span>
<span class="k">@media</span> <span class="n">screen</span> <span class="n">and</span> <span class="p">(</span><span class="n">min-width</span><span class="p">:</span> <span class="m">768px</span><span class="p">)</span> <span class="p">{</span>
    <span class="nt">body</span><span class="p">{</span>
        <span class="nl">overflow</span><span class="p">:</span> <span class="nb">hidden</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nt">html</span><span class="o">,</span>
<span class="nt">body</span><span class="o">,</span>
<span class="nt">section</span><span class="p">{</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/**
 * 테스트를 위한 색상 구별
 */</span>
<span class="nt">section</span><span class="nd">:nth-child</span><span class="o">(</span><span class="nt">odd</span><span class="o">)</span><span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="n">lightgray</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">section</span><span class="p">{</span>
    <span class="c">/** 
     * js에서 top 속성으로 컨트롤하기 때문에
     * relative 로 하였습니다.
     */</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
<span class="p">}</span>

<span class="nf">#btns</span><span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">fixed</span><span class="p">;</span>
    <span class="nl">bottom</span><span class="p">:</span> <span class="m">10%</span><span class="p">;</span>
    <span class="nl">right</span><span class="p">:</span> <span class="m">5%</span><span class="p">;</span>
    <span class="nl">z-index</span><span class="p">:</span> <span class="m">100</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이렇게 기본적으로 눈으로 확인할 수 있게 샘플 준비는 끝났습니다. 본격적으로 js로 구현해봅시다.</p>

<h3 id="변수-설정">변수 설정</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="cm">/**
 * 필요한 변수입니다.
 * 1. 상하버튼의 wrapper를 지정 children으로 뽑아 쓰기 위함
 * 2. section은 section태그 전체입니다.
 * 3. height는 section하나의 높이입니다.
 * 4. scrolling은 스크롤바가 없기때문에 이 변수가 스크롤 바 역할을 합니다.
 * 5. responsive는 reload나 redirection시 초기화하는 변수입니다.
 */</span> 
<span class="kd">const</span> <span class="nx">upBtns</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">btns</span><span class="dl">'</span><span class="p">).</span><span class="nx">children</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
<span class="kd">const</span> <span class="nx">section</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">section</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">height</span> <span class="o">=</span> <span class="nx">section</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">clientHeight</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">scrolling</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">responsive</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">&lt;</span><span class="mi">768</span><span class="p">?</span><span class="kc">false</span><span class="p">:</span><span class="kc">true</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="슬라이드-기능-구현---스크롤">슬라이드 기능 구현 - 스크롤</h3>

<blockquote>
  <p>스크롤을 했을 때 슬라이드가 일어나도록 하는 부분 작성입니다.</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
</pre></td><td class="rouge-code"><pre><span class="c1">// 스크롤 범위 제한</span>
<span class="kd">function</span> <span class="nx">scrollLimit</span><span class="p">(){</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">scrolling</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span>
        <span class="c1">// 0보다 작으면 0으로 유지.</span>
        <span class="nx">scrolling</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">scrolling</span><span class="o">&gt;</span><span class="nx">section</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="nx">height</span><span class="p">){</span>
        <span class="c1">// 총 section 높이보다 크면</span>
        <span class="c1">// section.length-1의 총 높이로 유지.</span>
        <span class="nx">scrolling</span> <span class="o">=</span> <span class="p">(</span><span class="nx">section</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">height</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 스크롤 움직이는 기능</span>
<span class="kd">function</span> <span class="nx">scrollHandler</span><span class="p">(){</span>
    <span class="nb">Object</span><span class="p">.</span><span class="nx">values</span><span class="p">(</span><span class="nx">section</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">el</span><span class="o">=&gt;</span><span class="p">{</span>
        <span class="nx">el</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="s2">`-</span><span class="p">${</span><span class="mi">100</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">scrolling</span><span class="o">/</span><span class="nx">height</span><span class="p">)}</span><span class="s2">%`</span><span class="p">;</span>
        <span class="c1">// 스크롤 증가에 따라 높이로 나누어 소수점을 버리고</span>
        <span class="c1">// 딱 떨어지는 퍼센트값으로 움직이게 합니다.</span>
    <span class="p">});</span>
<span class="p">}</span>

<span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">wheel</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
    <span class="nx">responsive</span><span class="p">?</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">deltaY</span><span class="o">&gt;</span><span class="mi">0</span>
    <span class="c1">// wheel down</span>
    <span class="p">?</span><span class="nx">scrolling</span><span class="o">+=</span><span class="mi">150</span>
    <span class="c1">// wheel up</span>
    <span class="p">:</span><span class="nx">scrolling</span><span class="o">-=</span><span class="mi">150</span><span class="p">:</span>
    <span class="kc">null</span>
    <span class="nx">scrollLimit</span><span class="p">();</span>
    <span class="nx">scrollHandler</span><span class="p">();</span>
<span class="p">});</span>

<span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">resize</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="c1">// resize toggler</span>
    <span class="nx">responsive</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">&lt;</span><span class="mi">768</span><span class="p">?</span><span class="kc">false</span><span class="p">:</span><span class="kc">true</span><span class="p">;</span>
<span class="p">});</span>

<span class="cm">/* 이 코드는 위의 삼항연산자를 풀어쓴 예제입니다. */</span>
<span class="k">if</span><span class="p">(</span><span class="nx">responsive</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">deltaY</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span>
        <span class="nx">scrolling</span><span class="o">+=</span><span class="mi">150</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">scrolling</span><span class="o">-=</span><span class="mi">150</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="cm">/* 이 코드는 위의 삼항연산자를 풀어쓴 예제입니다. */</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">resize</code>를 감지하여 responsive가 작동여부를 결정하는 열쇠 역할을 합니다. 그러기 위해서 윈도우 사이즈에 따라 <code class="language-plaintext highlighter-rouge">boolean</code>값을 할당받고, <code class="language-plaintext highlighter-rouge">wheel</code>을 감지하는 이벤트를 추가하여 true일때만 기능을 작성합니다.</p>

<p><code class="language-plaintext highlighter-rouge">wheel</code>을 <code class="language-plaintext highlighter-rouge">up</code>, <code class="language-plaintext highlighter-rouge">down</code>의 조건을 알기 위해 <code class="language-plaintext highlighter-rouge">event</code>의 <code class="language-plaintext highlighter-rouge">deltaY</code>값의 양과 음으로 구분합니다.</p>

<p>스크롤을 올리면 <code class="language-plaintext highlighter-rouge">deltaY</code>가 음수, 내리면 <code class="language-plaintext highlighter-rouge">deltaY</code>가 양수입니다. 좀 전에 선언한 <code class="language-plaintext highlighter-rouge">scrolling</code>변수가 스크롤 역할을 한다했습니다. 그래서 <code class="language-plaintext highlighter-rouge">scrolling</code>에 <code class="language-plaintext highlighter-rouge">150단위</code>의 값으로 조정합니다. 여기서 <code class="language-plaintext highlighter-rouge">150단위</code>를 높이게 되면 휠에 반응하는 슬라이드의 민감도가 높아집니다.</p>

<h3 id="슬라이드-기능-구현---버튼">슬라이드 기능 구현 - 버튼</h3>

<blockquote>
  <p>버튼을 클릭 했을 때 슬라이드가 일어나도록 하는 부분 작성입니다.</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nx">upScroll</span><span class="p">(){</span>
    <span class="nx">scrolling</span> <span class="o">-=</span> <span class="nx">height</span><span class="p">;</span>
    <span class="nx">scrollLimit</span><span class="p">();</span>
    <span class="nx">scrollHandler</span><span class="p">();</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">downScroll</span><span class="p">(){</span>
    <span class="nx">scrolling</span> <span class="o">+=</span> <span class="nx">height</span><span class="p">;</span>
    <span class="nx">scrollLimit</span><span class="p">();</span>
    <span class="k">if</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">scrolling</span><span class="o">/</span><span class="nx">height</span><span class="p">)</span><span class="o">==</span><span class="nx">section</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span>
        <span class="nx">scrolling</span> <span class="o">-=</span> <span class="nx">height</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">scrollHandler</span><span class="p">();</span>
<span class="p">}</span>

<span class="nx">btns</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">responsive</span><span class="p">?</span>
    <span class="nx">upScroll</span><span class="p">():</span><span class="kc">null</span>
<span class="p">});</span>

<span class="nx">btns</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">responsive</span><span class="p">?</span>
    <span class="nx">downScroll</span><span class="p">():</span><span class="kc">null</span>
<span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>명시적으로 btns[0]과 btns[1]을 변수에 담는 것이 보기 좋으나</p>
:ET