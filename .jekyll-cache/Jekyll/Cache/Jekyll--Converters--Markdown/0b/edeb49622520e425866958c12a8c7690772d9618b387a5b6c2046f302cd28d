I";E<h1 id="컴포넌트-엘리먼트에-다중-속성-보내기">컴포넌트, 엘리먼트에 다중 속성 보내기</h1>

<blockquote>
  <p>기억하고자 가볍게 올리는 것이니 참고 바랍니다.</p>
</blockquote>

<p>최근 여러 포트폴리오를 양산하는게 아닌가 싶어서 제대로 하나만 파고자 기존에 만들었던 JSP포트폴리오 중 열심히 했던 프로젝트를 새로 습득한 기술을 적용하고 업데이트 하고자 리뉴얼 중입니다.</p>

<p>간단히 상황을 알려드리자면 현재 프론트는 최근에 배운 <code class="language-plaintext highlighter-rouge">Vue</code>를 사용하고 <code class="language-plaintext highlighter-rouge">Spring framework</code>를 이용해 서버를 만들고 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">vue</code>에 대한 감이 잡히는 시점에서 속성명 동적 바인딩이나 동적 컴포넌트를 로드하는 것도 알겠는데 여러 속성이 있고 각 엘리먼트마다 적용되는 속성이 다를 때 어떻게 한 번에 적용할까 생각을 했습니다.</p>

<h2 id="이것만-기억하자">이것만 기억하자</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="c1">// module-signup.js</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">component</span><span class="p">(</span><span class="dl">'</span><span class="s1">module-signup</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
    <span class="na">props</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">orders</span><span class="dl">'</span><span class="p">],</span>
    <span class="na">template</span><span class="p">:</span> <span class="s2">`
        &lt;div
        style="min-height: 300px;"
        class="form-signup col-15 text-center mx-auto"&gt;
            &lt;div
            v-for="item in orders"
            :class="['signup', item.show?'':'hide']"
            :key="item.id"&gt;
                &lt;div&gt;
                    &lt;span class="h3"&gt;&lt;/span&gt;
                &lt;/div&gt;
                &lt;div class="w-flex flex-column"&gt;
                    &lt;input
                    v-for="i in item.input"
                    :name="i.name"
                    v-bind="i.options" &lt;&lt; 바로 이녀석
                    pattern=""
                    class="form-input form-input-lg"
                    :type="i.type??'text'"&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    `</span>
<span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">module-signup</code>이라는 전역 컴포넌트가 있습니다. 다른 페이지에서 재사용하기 위해서 전달되는 옵션들을 자동으로 넣으려하는데 잘 안됩니다.</p>

<p>이 모듈을 사용하는 곳은 아래와 같습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="rouge-code"><pre><span class="c1">// app-signup.js</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
   <span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">return</span> <span class="p">{</span>
         <span class="na">current</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
         <span class="na">btnStyle</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">btn</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-info</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-lg</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">px-2</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">rounded-0</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn btn-info</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-lg</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">px-2</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">rounded-0</span><span class="dl">'</span><span class="p">],</span>
         <span class="na">signupOrder</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span> <span class="c1">// 여기서 값을 전달 하고자 했습니다</span>
      <span class="p">}</span>
   <span class="p">},</span>
   <span class="c1">// ... methods ...</span>
   <span class="na">template</span><span class="p">:</span> <span class="s2">`
      &lt;section class="fence-full fence-lg"&gt;
         &lt;module-breadcrumb
         :current="current"
         :orders="signupOrder"&gt;&lt;/module-breadcrumb&gt;
         &lt;module-signup
         :orders="signupOrder"&gt;&lt;/module-signup&gt;
         &lt;div class="text-center"&gt;
               &lt;button
               @click="prevOrder"
               :class="btnStyle"&gt;prev&lt;/button&gt;
               &lt;button
               @click="nextOrder"
               :class="btnStyle"&gt;&lt;/button&gt;
         &lt;/div&gt;
      &lt;/section&gt;
   `</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>대충 이렇게 생긴 곳에서 사용을 하는데 <code class="language-plaintext highlighter-rouge">signOrder</code>라는 배열 데이터가 전달되면 여러 속성을 담아 <code class="language-plaintext highlighter-rouge">module-signup</code>에 뿌리는 게 도통 어떻게 해야할지 몰랐습니다.</p>

<p><code class="language-plaintext highlighter-rouge">stackoverflow</code>에서 알아낸 방법은 아래와 같습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
   <span class="nx">data</span><span class="p">(){</span>
      <span class="k">return</span> <span class="p">{</span>
         <span class="na">attributes</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">testName</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">value</span><span class="p">:</span> <span class="dl">'</span><span class="s1">testValue</span><span class="dl">'</span><span class="p">,</span>
         <span class="p">}</span>
      <span class="p">}</span>
   <span class="p">},</span>
   <span class="na">template</span><span class="p">:</span> <span class="s2">`
      &lt;input
      v-bind="attributes"
      &gt;
   `</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">v-bind</code>에 객체를 주게 되면 <code class="language-plaintext highlighter-rouge">vue</code>에서 객체의 키와 값을 분류하는 기능이 있는 듯 합니다. 그래서 일부러 오류를 띄어서 메서드를 확인해야겠다 생각했습니다. 아래 이미지는 해당 오류 트레이스와 오류 발생 메서드입니다.</p>

<figure class="text-center">
<span class="w-inline-block">
   <img class="w-100" src="/assets/images/post/vue/attributes/attrs01.png" alt="attr01" title="attr01" />
   <figcaption>오류 트레이스1</figcaption>
</span>
</figure>

<figure class="text-center">
<span class="w-inline-block">
   <img class="w-100" src="/assets/images/post/vue/attributes/attrs02.png" alt="attr02" title="attr02" />
   <figcaption>오류 발생 메서드</figcaption>
</span>
</figure>

<p>이제 뭔가 감이 옵니다. 객체가 <code class="language-plaintext highlighter-rouge">v-bind</code>속성의 값에 전달되면 <code class="language-plaintext highlighter-rouge">key</code>와 <code class="language-plaintext highlighter-rouge">value</code>가 분류되고 속성 이름과 속성 값에 자동 할당되는 구조로 보입니다. 그렇다면 <code class="language-plaintext highlighter-rouge">app-signup</code>에서 <code class="language-plaintext highlighter-rouge">data</code>부분만 따로 떼어 예제로 작성해보면</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
   <span class="k">return</span> <span class="p">{</span>
      <span class="na">current</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="na">btnStyle</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">btn</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-info</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-lg</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">px-2</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">rounded-0</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn btn-info</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-lg</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">px-2</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">rounded-0</span><span class="dl">'</span><span class="p">],</span>
      <span class="na">signupOrder</span><span class="p">:</span> <span class="p">[</span>
         <span class="p">{</span>
            <span class="na">id</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
            <span class="na">title</span><span class="p">:</span> <span class="dl">'</span><span class="s1">이름과 생년월일을 입력해 주세요.</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">show</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
            <span class="na">input</span><span class="p">:</span> <span class="p">[</span>
               <span class="p">{</span>
                     <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">name</span><span class="dl">'</span><span class="p">,</span>
                     <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
                     <span class="na">options</span><span class="p">:</span> <span class="p">{</span> <span class="c1">// 여기서 다중 속성을 넣고자 합니다.</span>
                        <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">test value1</span><span class="dl">'</span><span class="p">,</span>
                        <span class="na">placeholder</span><span class="p">:</span> <span class="dl">'</span><span class="s1">test value2</span><span class="dl">'</span><span class="p">,</span>
                     <span class="p">}</span>
               <span class="p">},</span> 
            <span class="p">]</span>
         <span class="p">}</span>
      <span class="p">]</span>
   <span class="p">}</span>
<span class="p">},</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이렇게 작성하면 <code class="language-plaintext highlighter-rouge">stackoverflow</code>에서 소개한 그대로 입니다만 원리를 알고서 쓰니 <code class="language-plaintext highlighter-rouge">v-bind</code>에 <code class="language-plaintext highlighter-rouge">:title</code> 등 콜론을 붙여 사용하는 것의 형태가 어떤 원리인지도 감이 옵니다.</p>

<p><code class="language-plaintext highlighter-rouge">v-bind:title="value"</code>는 <code class="language-plaintext highlighter-rouge">v-bind</code>에 정해진 메서드가 실행되는데 콜론으로 속성명이 명시되면 해당 속성에만 value라는 값이 할당되고 콜론 없이 객체형태로 전달하면 객체의 유효한 속성이 모두 적용되는 원리로 보입니다.</p>

<p>위에서 소개된 방법과 비슷하지만 배열에 여러 객체를 담아 전달해도 적용되는 것을 알 수 있습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
   <span class="k">return</span> <span class="p">{</span>
      <span class="na">current</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="na">btnStyle</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">btn</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-info</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-lg</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">px-2</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">rounded-0</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn btn-info</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">btn-lg</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">px-2</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">rounded-0</span><span class="dl">'</span><span class="p">],</span>
      <span class="na">signupOrder</span><span class="p">:</span> <span class="p">[</span>
         <span class="p">{</span>
            <span class="na">id</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
            <span class="na">title</span><span class="p">:</span> <span class="dl">'</span><span class="s1">이름과 생년월일을 입력해 주세요.</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">show</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
            <span class="na">input</span><span class="p">:</span> <span class="p">[</span>
               <span class="p">{</span>
                     <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">name</span><span class="dl">'</span><span class="p">,</span>
                     <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
                     <span class="na">options</span><span class="p">:</span> <span class="p">[</span> <span class="c1">// 여기서 다중 속성을 넣고자 합니다.</span>
                        <span class="p">{</span><span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">test value1</span><span class="dl">'</span><span class="p">},</span>
                        <span class="p">{</span><span class="na">placeholder</span><span class="p">:</span> <span class="dl">'</span><span class="s1">test value2</span><span class="dl">'</span><span class="p">},</span>
                     <span class="p">]</span>
               <span class="p">},</span> 
            <span class="p">]</span>
         <span class="p">}</span>
      <span class="p">]</span>
   <span class="p">}</span>
<span class="p">},</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위의 예시처럼 배열에 객체를 담아 전송해도 다중 속성이 잘 적용되는 것을 확인 할 수 있습니다. 객체냐 배열이냐의 차이는 쓰임에 관해서 당장 마땅히 떠오르는 차별점은 없습니다만, 다중 속성을 적용하시려는데 어려움을 겪으신다면 작은 도움이 되었으면 합니다 😀</p>

<hr />

<p>📚 함께 보면 좋은 내용</p>

<p><a href="https://stackoverflow.com/questions/46741537/how-to-add-multiple-attribute-vue-js" target="_blank">stackoverflow::How to add multiple attribute - vue.js</a></p>
:ET