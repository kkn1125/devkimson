I"_A<h1 id="jdbc-template-사용법">JDBC Template 사용법</h1>

<p>오랜만에 JAVA를 사용했습니다. 요즘 만들고 싶은게 많아서 js를 쭉 쓰다보니 점점 JAVA를 잊어가는 느낌입니다.</p>

<p>MyBatis를 spring-boot에서는 간단하게 사용했었지만 spring에서는 Mybatis를 구현해 본 적이 없어서 이것저것 하던 중 jdbc template도 한 번 써봐야겠다 싶어서 사용법만 기록하려합니다.</p>

<h2 id="rootconfig-설정">RootConfig 설정</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="nd">@Configuration</span>
<span class="nd">@EnableWebMvc</span>
<span class="nd">@ComponentScan</span><span class="o">(</span><span class="n">basePackages</span> <span class="o">=</span> <span class="o">{</span><span class="s">"com.test.web"</span><span class="o">})</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">RootConfig</span> <span class="o">{</span>
	<span class="nd">@Bean</span>
	<span class="kd">public</span> <span class="nc">DataSource</span> <span class="nf">dataSource</span><span class="o">()</span>
	<span class="o">{</span>
		<span class="nc">DriverManagerDataSource</span> <span class="n">mysqlConfig</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DriverManagerDataSource</span><span class="o">();</span>
		<span class="n">mysqlConfig</span><span class="o">.</span><span class="na">setDriverClassName</span><span class="o">(</span><span class="s">"com.mysql.jdbc.Driver"</span><span class="o">);</span>
		<span class="n">mysqlConfig</span><span class="o">.</span><span class="na">setUrl</span><span class="o">(</span><span class="s">"jdbc:mysql://localhost:3306/kimsontest"</span><span class="o">);</span>
		<span class="n">mysqlConfig</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">"kimsontest"</span><span class="o">);</span>
		<span class="n">mysqlConfig</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">"kimsontest"</span><span class="o">);</span>
		<span class="k">return</span> <span class="n">mysqlConfig</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>RootConfig로 db를 연결하고 datasource를 받아 사용하려합니다.</p>

<h2 id="template-사용전">template 사용전</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="nd">@Repository</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserDao</span> <span class="kd">implements</span> <span class="nc">DAOImpl</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span>
<span class="o">{</span>
   <span class="nd">@Autowired</span>
	<span class="nc">DataSource</span> <span class="n">source</span><span class="o">;</span>
	
	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="nf">getUserList</span><span class="o">()</span> <span class="o">{</span>
      <span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
      <span class="nc">PreparedStatement</span> <span class="n">st</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
      <span class="nc">ResultSet</span> <span class="n">rs</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
      <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
      <span class="nc">List</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;();</span>
      <span class="k">try</span> <span class="o">{</span>
         <span class="n">con</span> <span class="o">=</span> <span class="n">source</span><span class="o">.</span><span class="na">getConnection</span><span class="o">();</span>
         <span class="n">sql</span> <span class="o">=</span> <span class="s">"SELECT * FROM user"</span><span class="o">;</span>
         <span class="n">st</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
         <span class="n">rs</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
         <span class="k">while</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>
            <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="o">();</span>
            <span class="n">user</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"num"</span><span class="o">));</span>
            <span class="n">user</span><span class="o">.</span><span class="na">setNamez</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"namez"</span><span class="o">));</span>
            <span class="n">user</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"age"</span><span class="o">));</span>
            <span class="n">user</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
            <span class="n">user</span><span class="o">.</span><span class="na">setPw</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"pw"</span><span class="o">));</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
         <span class="o">}</span>
      <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
         <span class="n">ex</span><span class="o">.</span><span class="na">getStackTrace</span><span class="o">();</span>
      <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
         <span class="k">try</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">con</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span><span class="n">con</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
            <span class="k">if</span><span class="o">(</span><span class="n">st</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span><span class="n">st</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
            <span class="k">if</span><span class="o">(</span><span class="n">rs</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span><span class="n">rs</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
         <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">ex</span><span class="o">.</span><span class="na">getStackTrace</span><span class="o">();</span>
         <span class="o">}</span>
      <span class="o">}</span>
      <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>template을 쓰기 전에는 각 메서드를 만들때마다 연결하고 연결을 끊고 하는 구문이 필요한 기능만큼 많아져서 때로는 수정 할 때 어디를 빼먹었고 어디서 오류나는지 많이 애를 먹었습니다.</p>

<p>그런데 template을 사용하면서 느낀 것은 코드량이 많이 줄었다는 것을 바로 느낄 수 있었습니다.</p>

<h2 id="template-사용-후">template 사용 후</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="nd">@Repository</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserDao</span> <span class="kd">implements</span> <span class="nc">DAOImpl</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span>
<span class="o">{</span>
   <span class="nd">@Autowired</span>
	<span class="nc">DataSource</span> <span class="n">source</span><span class="o">;</span>
	
	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="nf">getUserList</span><span class="o">()</span> <span class="o">{</span>
      <span class="nc">JdbcTemplate</span> <span class="n">jdbcTemplate</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JdbcTemplate</span><span class="o">(</span><span class="n">source</span><span class="o">);</span>
      <span class="c1">// dataSource를 인자로 넘겨줍니다.</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">jdbcTemplate</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="s">"SELECT * FROM user"</span><span class="o">,</span> <span class="k">new</span> <span class="nc">Object</span><span class="o">[]</span> <span class="o">{},</span> <span class="k">new</span> <span class="nc">RowMapper</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;()</span> <span class="o">{</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="nc">User</span> <span class="nf">mapRow</span><span class="o">(</span><span class="nc">ResultSet</span> <span class="n">rs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rowNum</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">SQLException</span> <span class="o">{</span>
				<span class="nc">User</span> <span class="n">u</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="o">();</span>
				<span class="n">u</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"num"</span><span class="o">));</span>
				<span class="n">u</span><span class="o">.</span><span class="na">setNamez</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"namez"</span><span class="o">));</span>
				<span class="n">u</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"age"</span><span class="o">));</span>
				<span class="n">u</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
				<span class="n">u</span><span class="o">.</span><span class="na">setPw</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"pw"</span><span class="o">));</span>
				<span class="k">return</span> <span class="n">u</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="k">return</span> <span class="n">list</span><span class="o">;</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>여전히 rs를 통해 가져와서 VO에 담고 데이터를 넘겨주는 것은 번거롭지만(Mybatis에 비해) 훨씬 간결해진 모습입니다.</p>

<p>JPA를 배워서 나중에는 MyBatis 등 여러가지를 비교하는 포스팅을 할 예정입니다. 많이 먼 이야기지만요…</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="nd">@ComponentScan</span><span class="o">(</span><span class="n">basePackages</span> <span class="o">=</span> <span class="o">{</span><span class="s">"com.test.web"</span><span class="o">})</span>
<span class="nd">@Controller</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HomeController</span> <span class="o">{</span>
	
	<span class="nd">@Autowired</span>
	<span class="nc">UserDao</span> <span class="n">dao</span><span class="o">;</span>
	
	<span class="nd">@GetMapping</span><span class="o">(</span><span class="s">""</span><span class="o">)</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">home</span><span class="o">(</span><span class="nc">Model</span> <span class="n">model</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"list"</span><span class="o">,</span> <span class="n">dao</span><span class="o">.</span><span class="na">getUserList</span><span class="o">());</span>
		<span class="k">return</span> <span class="s">"root.home"</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>template로 연결된 getUserList함수를 사용해서 모든 유저를 가져오는 방법은 기존에 데이터베이스 연결해서 사용하던 모습과 별 다를게 없습니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="c">&lt;!-- jstl 불러온 후 --&gt;</span>
<span class="nt">&lt;c:forEach</span> <span class="na">var=</span><span class="s">"item"</span> <span class="na">item=</span><span class="s">"${list}"</span><span class="nt">&gt;</span>
   ${item.namz}
<span class="nt">&lt;/c:forEach&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>여기까지 기록용으로 남기는 짤막한 jdbc template였습니다. udpate나 delete는 필요할 때 찾아서 사용해도 될 것 같습니다.</p>
:ET