I"5<h1 id="경로-내-파일-변경-감지">경로 내 파일 변경 감지</h1>

<blockquote>
  <p>문자 개행, 문자열 split, 배열 인덱스 번호, 특정 문자 포함 여부 등의 자료는 포스팅 하단에 링크로 첨부해두었습니다.</p>
</blockquote>

<p>이전에 <code class="language-plaintext highlighter-rouge">shell script</code>로 파일 변경을 감지해서 <code class="language-plaintext highlighter-rouge">python</code>을 <code class="language-plaintext highlighter-rouge">watch</code>하는 기능을 소개한 적이 있습니다. 하지만 이전에 했던 주요 단점인 지정된 파일만 감지를 하는 방식이었는데요.</p>

<p>조금 더 변하게 알아서 변경된 파일에 대해서만 다시 실행해주는 편이 더 편하고 효율적이겠다 싶어 수정을 했습니다.</p>

<p>해당 코드는 <a href="https://github.com/kkn1125/file-detection" target="_blank">여기</a>를 참조하시면 되겠습니다.</p>

<h2 id="변경된-파일-이름-가져오기">변경된 파일 이름 가져오기</h2>

<p>이전에 작성한 코드는 현재 실행 중인 터미널의 위치 내에서 변경된 파일들의 마지막 저장 일자를 문자열로 받아 비교하는 방식으로 단순히 <code class="language-plaintext highlighter-rouge">감지</code>만 했습니다.</p>

<p>현재 바뀐 점은 파일을 동일 위치에서 감지하는 것은 동일합니다만, 변경된 파일 명칭을 가져와 제어하는 기능입니다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">stat</span> <span class="nt">-c</span> %n <span class="k">*</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위에서 사용한 %n은 파일의 명칭을 가져오는 옵션입니다. 이전에는 %Z로 마지막 저장 시간을 가져왔지만 파일 명을 시간과 마찬가지의 순서로 가져오는 것에서 힌트를 얻고, 배열로 만들어 변경된 인덱스를 가져와 파일 명을 가져오게 하였습니다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="c"># 생략 ...</span>
<span class="k">while </span><span class="nb">true
</span><span class="k">do
    </span><span class="nv">CUR</span><span class="o">=</span><span class="si">$(</span><span class="nb">stat</span> <span class="nt">-c</span> %Z <span class="k">*</span><span class="si">)</span>
    
    <span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$PREV</span><span class="s2">"</span> <span class="o">!=</span> <span class="s2">"</span><span class="nv">$CUR</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span><span class="k">then
        </span><span class="nv">CHANGE_IDX</span><span class="o">=</span>0                                    <span class="c"># 추가</span>

        <span class="nv">PREV_ARR</span><span class="o">=(</span><span class="sb">`</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">PREV</span><span class="k">}</span> | <span class="nb">tr</span> <span class="s2">","</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span><span class="sb">`</span><span class="o">)</span>         <span class="c"># 추가</span>
        <span class="nv">CUR_ARR</span><span class="o">=(</span><span class="sb">`</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">CUR</span><span class="k">}</span> | <span class="nb">tr</span> <span class="s2">","</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span><span class="sb">`</span><span class="o">)</span>           <span class="c"># 추가</span>

        <span class="nv">FILES</span><span class="o">=(</span><span class="sb">`</span><span class="nb">echo</span> <span class="si">$(</span><span class="nb">stat</span> <span class="nt">-c</span> %n <span class="k">*</span> | <span class="nb">tr</span> <span class="s2">","</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span><span class="si">)</span><span class="sb">`</span><span class="o">)</span>    <span class="c"># 추가</span>

        <span class="nb">echo</span> <span class="s2">"Change file detection !"</span>                  <span class="c"># 추가</span>

        <span class="k">for </span>x <span class="k">in</span> <span class="s2">"</span><span class="k">${</span><span class="p">!PREV_ARR[@]</span><span class="k">}</span><span class="s2">"</span>                      <span class="c"># 추가</span>
        <span class="k">do
            if</span> <span class="o">[</span> <span class="s2">"</span><span class="k">${</span><span class="nv">PREV_ARR</span><span class="p">[</span><span class="nv">$x</span><span class="p">]</span><span class="k">}</span><span class="s2">"</span> <span class="o">!=</span> <span class="s2">"</span><span class="k">${</span><span class="nv">CUR_ARR</span><span class="p">[</span><span class="nv">$x</span><span class="p">]</span><span class="k">}</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span><span class="k">then
                </span><span class="nv">CHANGE_IDX</span><span class="o">=</span><span class="nv">$x</span>

                <span class="nv">FILE_NAME</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">FILES</span><span class="p">[</span><span class="k">${</span><span class="nv">CHANGE_IDX</span><span class="k">}</span><span class="p">]</span><span class="k">}</span><span class="s2">"</span>

                <span class="k">if</span> <span class="o">[[</span> <span class="nv">$FILE_NAME</span> <span class="o">=</span>~ <span class="s1">'py'</span> <span class="o">]]</span><span class="p">;</span><span class="k">then
                    </span>python <span class="nv">$FILE_NAME</span>
                <span class="k">fi
            fi
        done
    fi
    </span><span class="nv">PREV</span><span class="o">=</span><span class="nv">$CUR</span>
<span class="k">done</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>코드의 일부입니다. 이전과 거의 동일하고 추가된 부분은 15줄에 불과합니다. 이미 <code class="language-plaintext highlighter-rouge">watch</code> 기능이 있는지는 모르겠지만 공부도 할 겸 좋은 기회라 생각해서 만들었습니다.</p>

<hr />

<p>📚 함께 보면 좋은 내용</p>

<p><a href="https://devhints.io/bash" target="_blank">devhints.io :: Bash scripting cheetsheet</a></p>

<p><a href="https://stackoverflow.com/questions/229551/how-to-check-if-a-string-contains-a-substring-in-bash" target="_blank">Stackoverflow :: How to check if a string contains a substring in Bash</a></p>

<p><a href="https://stackoverflow.com/questions/15028567/get-the-index-of-a-value-in-a-bash-array" target="_blank">Stackoverflow :: Get the index of a value in a Bash array</a></p>

<p><a href="https://stackoverflow.com/questions/15028567/get-the-index-of-a-value-in-a-bash-array" target="_blank">WEBTERROR님 :: BASH에서 SPLIT 활용하는 방법</a></p>

<p><a href="https://www.lesstif.com/lpt/echo-19857474.html" target="_blank">lesstif님 :: echo 명령어로 줄바꿈(개행) 문자 입력</a></p>
:ET