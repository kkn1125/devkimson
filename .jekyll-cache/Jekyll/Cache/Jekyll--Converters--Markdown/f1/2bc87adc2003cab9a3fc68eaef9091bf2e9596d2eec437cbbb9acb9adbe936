I"= <h1 id="custom-tag">Custom Tag</h1>

<p>이름을 뭐라 해야할지 몰라서 커스텀 태그라고 했습니다. 어떤 의미인지는 아래 예를 보면서 설명드리겠습니다.</p>

<p><code class="language-plaintext highlighter-rouge">jekyll</code>의 <code class="language-plaintext highlighter-rouge">liquid</code>를 쓰다가 문득 <code class="language-plaintext highlighter-rouge">ruby</code>없이 <code class="language-plaintext highlighter-rouge">javascript</code>로 <code class="language-plaintext highlighter-rouge">html</code>을 파싱하고 내가 정한 약속된 부분을 읽어서 설정한 내용을 적용할 수 없을까 하는 생각에 공부할 겸 구현해봤습니다.</p>

<p>liquid에서는 <code class="language-plaintext highlighter-rouge">{{ ... }}</code> 이렇게 콧수염을 이중으로 씁니다. 혹은 <code class="language-plaintext highlighter-rouge">\{\% ... %}</code> 이렇게 <code class="language-plaintext highlighter-rouge">jsp</code>의 스크립틀릿태그의 종류가 있듯이 기능에 따라 조금씩 다르게 변화시켜서 사용합니다.</p>

<h2 id="parsing할-태그-모양">parsing할 태그 모양</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
    <span class="p">...</span>
    <span class="o">&lt;</span><span class="sr">/head</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">ksLoader.js</span><span class="dl">"</span><span class="o">&gt;&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span>
        <span class="p">{@</span> <span class="nx">include</span> <span class="nx">nav</span><span class="p">.</span><span class="nx">html</span> <span class="p">@}</span>

        <span class="p">{@</span>
        <span class="nx">site</span><span class="p">.</span><span class="nx">author</span><span class="p">.</span><span class="nx">name</span>
        <span class="p">@}</span>

        <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Test</span><span class="o">&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="dl">""</span><span class="o">&gt;</span><span class="p">{@</span><span class="nd">site</span><span class="p">.</span><span class="nx">web</span><span class="p">.</span><span class="nx">url</span><span class="p">@}</span><span class="o">&lt;</span><span class="sr">/a</span><span class="err">&gt;
</span>
    <span class="o">&lt;</span><span class="sr">/body</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/html</span><span class="err">&gt;
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>위의 코드처럼 <code class="language-plaintext highlighter-rouge">\{\@ ... \@\}</code> 으로 감싸여진 내용을 분리해서 <code class="language-plaintext highlighter-rouge">site</code>라는 예약어를 최상위 네임으로 사용하여 <code class="language-plaintext highlighter-rouge">\{\@ site.author.name \@\}</code> 사용자의 이름을 가져오는 식으로 사용하려합니다.</p>

<h2 id="json-설정">json 설정</h2>

<p><code class="language-plaintext highlighter-rouge">_config.json</code>으로 이름짓고 페이지를 구성하는데 필요한 정보들을 끌어오기 쉽게 정리해둡니다.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="p">{</span><span class="w">
    </span><span class="nl">"site"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"baseurl"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
        </span><span class="nl">"author"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"kimson"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"chaplet01@gmail.com"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"blog"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://kkn1125.github.com/"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"portfolio"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://kkn1125.github.io/portfolio/"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"web"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"baseurl"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
            </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://kkn1125.github.io"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Devkimson"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"나를 표현하는 공간"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"pagination"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"page"</span><span class="p">:</span><span class="w"> </span><span class="mi">6</span><span class="p">,</span><span class="w">
                </span><span class="nl">"active"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"markdown"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"active"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">yml</code>을 사용하고 싶으시면 <code class="language-plaintext highlighter-rouge">npm</code>에서 <code class="language-plaintext highlighter-rouge">yml</code>을 파싱하는 기능을 받아 사용하시면 됩니다. <code class="language-plaintext highlighter-rouge">yml</code>을 <code class="language-plaintext highlighter-rouge">json</code>으로 변환하려 했지만 아직 능력이 안되서 보류해뒀습니다…</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">json</code>파일은 읽어와서 객체로 만들기가 쉽기때문에 <code class="language-plaintext highlighter-rouge">json</code>을 쓰겠습니다.</p>
:ET